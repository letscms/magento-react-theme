{"version":3,"file":"ProductFilter-D1eJOwrX.js","sources":["../../../src/components/product/ProductFilter.jsx"],"sourcesContent":["import React, { memo, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProductFilter = ({ filters, appliedFilters, onFilterChange, categories }) => {\n  const [expandedSections, setExpandedSections] = useState({});\n  \n  // Ensure filters is always an array\n  const filtersArray = Array.isArray(filters) ? filters : [];\n  \n  // Create a category filter if categories are provided\n  const categoryFilter = categories && categories.length > 0 ? {\n    attribute_code: 'category_id',\n    label: 'Category',\n    options: categories.map(cat => ({\n      label: cat.name,\n      value: cat.id,\n      count: cat.product_count\n    }))\n  } : null;\n\n  // Combine category filter with other filters if it exists\n  const allFilters = categoryFilter \n    ? [categoryFilter, ...filtersArray] \n    : filtersArray;\n\n  // Toggle filter section expansion\n  const toggleSection = (code) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [code]: !prev[code]\n    }));\n  };\n\n  // Handle checkbox change\n  const handleFilterChange = (attributeCode, value, checked) => {\n    const currentValues = appliedFilters[attributeCode] || [];\n    \n    let newValues;\n    if (checked) {\n      // Add value if checked\n      newValues = [...currentValues, value];\n    } else {\n      // Remove value if unchecked\n      newValues = currentValues.filter(v => v !== value);\n    }\n    \n    onFilterChange(attributeCode, newValues);\n  };\n\n  // Check if a filter is applied\n  const isFilterApplied = (attributeCode, value) => {\n    return appliedFilters[attributeCode]?.includes(value) || false;\n  };\n\n  // Clear all filters\n  const clearAllFilters = () => {\n    onFilterChange({});\n  };\n\n  // Clear specific filter\n  const clearFilter = (attributeCode) => {\n    onFilterChange(attributeCode, []);\n  };\n\n  // Count total applied filters\n  const countAppliedFilters = () => {\n    if (!appliedFilters || typeof appliedFilters !== 'object') {\n      return 0;\n    }\n    return Object.values(appliedFilters).reduce((count, values) => {\n      return count + (Array.isArray(values) ? values.length : 0);\n    }, 0);\n  };\n\n  const totalAppliedFilters = countAppliedFilters();\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm p-4\">\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-lg font-semibold\">Filters</h2>\n        {totalAppliedFilters > 0 && (\n          <button \n            onClick={clearAllFilters}\n            className=\"text-sm text-indigo-600 hover:text-indigo-800\"\n          >\n            Clear All\n          </button>\n        )}\n      </div>\n\n      {allFilters.length === 0 ? (\n        <p className=\"text-gray-500 text-sm\">No filters available</p>\n      ) : (\n        <div className=\"space-y-4\">\n          {allFilters.map(filter => {\n            if (!filter || !filter.attribute_code) {\n              return null; // Skip invalid filters\n            }\n            if(filter.attribute_code === 'category_uid') {\n              return null; // Skip category filter if options are not an array\n            }\n            \n            const isExpanded = expandedSections[filter.attribute_code] !== false; // Default to expanded\n            const hasAppliedValues = appliedFilters && \n                                    Array.isArray(appliedFilters[filter.attribute_code]) && \n                                    appliedFilters[filter.attribute_code].length > 0;\n            \n            return (\n              <div key={filter.attribute_code} className=\"border-b pb-3\">\n                <div \n                  className=\"flex justify-between items-center cursor-pointer py-2\"\n                  onClick={() => toggleSection(filter.attribute_code)}\n                >\n                  <div className=\"flex items-center\">\n                    <h3 className=\"font-medium text-gray-800\">{filter.label || filter.attribute_code}</h3>\n                    {hasAppliedValues && (\n                      <span className=\"ml-2 bg-indigo-100 text-indigo-800 text-xs px-2 py-1 rounded-full\">\n                        {appliedFilters[filter.attribute_code].length}\n                      </span>\n                    )}\n                  </div>\n                  <span className=\"text-gray-500\">\n                    {isExpanded ? 'âˆ’' : '+'}\n                  </span>\n                </div>\n                \n                {isExpanded && (\n                  <div className=\"mt-2 pl-2\">\n                    {hasAppliedValues && (\n                      <div className=\"flex justify-end mb-2\">\n                        <button \n                          onClick={(e) => {\n                            e.stopPropagation();\n                            clearFilter(filter.attribute_code);\n                          }}\n                          className=\"text-xs text-gray-500 hover:text-indigo-600\"\n                        >\n                          Clear\n                        </button>\n                      </div>\n                    )}\n                    \n                    <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n                      {Array.isArray(filter.options) ? (\n                        filter.options.map(option => {\n                          if (!option || !option.value) {\n                            return null; // Skip invalid options\n                          }\n                          \n                          return (\n                            <div key={option.value} className=\"flex items-center\">\n                          <input\n                            type=\"checkbox\"\n                            id={`${filter.attribute_code}-${option.value}`}\n                            checked={isFilterApplied(filter.attribute_code, option.value)}\n                            onChange={(e) => handleFilterChange(\n                              filter.attribute_code, \n                              option.value, \n                              e.target.checked\n                            )}\n                            className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                          />\n                          <label \n                            htmlFor={`${filter.attribute_code}-${option.value}`}\n                            className=\"ml-2 text-sm text-gray-700\"\n                          >\n                            {option.label || option.value} \n                          </label>\n                            </div>\n                          );\n                        })\n                      ) : (\n                        <p className=\"text-sm text-gray-500\">No options available</p>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nProductFilter.propTypes = {\n  filters: PropTypes.array,\n  appliedFilters: PropTypes.object,\n  onFilterChange: PropTypes.func.isRequired,\n  categories: PropTypes.array\n};\n\nProductFilter.defaultProps = {\n  filters: [],\n  appliedFilters: {},\n  categories: []\n};\n\nexport default memo(ProductFilter);\n"],"names":["ProductFilter","filters","appliedFilters","onFilterChange","categories","expandedSections","setExpandedSections","useState","filtersArray","Array","isArray","categoryFilter","length","attribute_code","label","options","map","cat","name","value","id","count","product_count","allFilters","totalAppliedFilters","Object","values","reduce","jsxs","className","children","jsx","jsxRuntimeExports","onClick","filter","isExpanded","hasAppliedValues","toggleSection","code","prev","e","attributeCode","stopPropagation","option","type","checked","_a","includes","onChange","currentValues","newValues","v","handleFilterChange","target","htmlFor","propTypes","PropTypes","array","object","func","isRequired","defaultProps","memo"],"mappings":"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"}