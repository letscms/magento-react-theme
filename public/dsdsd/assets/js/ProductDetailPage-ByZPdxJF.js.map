{"version":3,"mappings":"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","names":["CREATE_PRODUCT_REVIEW_MUTATION","gql","GET_PRODUCT_REVIEW_RATINGS_METADATA_QUERY","GET_PRODUCT_REVIEWS_QUERY","ProductReviewForm","productSku","onSubmitReviewSuccess","ratingsMetadata","setRatingsMetadata","useState","selectedRatings","setSelectedRatings","nickname","setNickname","summary","setSummary","reviewText","setReviewText","formErrors","setFormErrors","isLoadingRatings","setIsLoadingRatings","ratingsError","setRatingsError","useEffect","async","result","data","apolloClient","query","fetchPolicy","productReviewRatingsMetadata","items","success","metadata","message","error","errorMessage","graphQLErrors","length","map","err","join","networkError","getProductReviewRatingsMetadata","fetchRatingsMetadata","jsx","children","className","jsxs","onSubmit","e","preventDefault","errors","forEach","ratingMeta","id","value_id","name","trim","Object","keys","validateForm","ratingsForApi","meta","_a","reviewData","sku","text","ratings","mutate","mutation","variables","createProductReview","review","addProductReview","alert","values","option","selectedNumericValueForCriterion","numeric_value","isStarActive","value","jsxRuntimeExports","type","onClick","handleRatingChange","ratingId","valueId","numericValue","prevRatings","_b","title","htmlFor","onChange","target","rows","StarRating","rating","size","numericRating","parseFloat","filledStars","isNaN","Math","max","min","round","Array","_","i","ProductReviewItem","created_at","average_rating","ratings_breakdown","reviewDate","Date","toLocaleDateString","overallStars","breakdownItem","index","DownloadableProductLinks","product","baseMediaUrl","useConfig","downloadable_product_links","downloadable_product_samples","links_purchased_separately","getSampleLink","sample","sample_type","sample_url","sample_file","startsWith","link","linkSampleUrl","price","formatPrice","_c","price_range","minimum_price","final_price","currency","href","rel","link_id","sampleUrl","sample_id","GroupedProductItems","onGroupedItemsChange","groupedItems","itemQuantities","setItemQuantities","initialQuantities","item","qty","handleQuantityChange","useCallback","newQuantity","parseInt","prev","updatedQuantities","small_image","url","src","alt","label","Link","to","url_key","stock_status","disabled","HeartIcon","filled","xmlns","viewBox","fill","stroke","strokeWidth","fillRule","d","clipRule","ShoppingCartIcon","strokeLinecap","strokeLinejoin","ConfigurableProductOptions","React","lazy","__vitePreload","import","__VITE_PRELOAD__","BundleProductOptions","ProductDetailPage$1","memo","urlKey","useParams","navigate","useNavigate","user","isAuthenticated","loading","getProductByUrlKey","useProduct","isInWishlist","addItemToWishlist","removeItemFromWishlist","useWishlist","selectedImage","setSelectedImage","quantity","setQuantity","activeTab","setActiveTab","reviews","setReviews","reviewsLoading","setReviewsLoading","reviewsError","setReviewsError","selectedVariant","setSelectedVariant","selectedConfigurableOptions","setSelectedConfigurableOptions","selectedBundleItems","setSelectedBundleItems","currentBundlePrice","setCurrentBundlePrice","groupedItemQuantities","setGroupedItemQuantities","isProductInWishlist","useMemo","displayProduct","currentPriceInfo","type_id","regular_price","discount","isOnSale","amount_off","percent_off","handleWishlistClick","state","from","handleVariantChange","variant","options","image","handleBundleSelectionChange","selections","totalPrice","handleGroupedItemsChange","quantities","handleReviewSubmitted","fetchReviews","incrementQuantity","decrementQuantity","products","page_info","getProductReviews","productData","media_gallery","fetchProductData","LoadingSpinner","ErrorMessage","Fragment","Seo","meta_title","description","meta_description","html","ogImage","canonicalUrl","width","height","_d","configurable_options","onVariantChange","selectedOptions","onBundleSelectionChange","AddToCartButton","bundleSelections","groupedItemsQuantities","every","required","option_id","entries","some","itemInGroup","find","it","tab","dangerouslySetInnerHTML","__html","_e","_f","replace","weight","_g","short_description"],"ignoreList":[],"sources":["../../../src/api/review.js","../../../src/components/product/ProductReviewForm.jsx","../../../src/components/product/ProductReviewItem.jsx","../../../src/components/product/DownloadableProductLinks.jsx","../../../src/components/product/GroupedProductItems.jsx","../../../src/components/ui/Icons.jsx","../../../src/pages/ProductDetailPage.jsx"],"sourcesContent":["import { gql } from '@apollo/client';\nimport apolloClient from './apolloClient';\n\n// Updated mutation to match Magento 2.4.x GraphQL schema\nconst CREATE_PRODUCT_REVIEW_MUTATION = gql`\n  mutation CreateProductReview(\n    $sku: String!\n    $nickname: String!\n    $summary: String!\n    $text: String!\n    $ratings: [ProductReviewRatingInput!]!\n  ) {\n    createProductReview(\n      input: {\n        sku: $sku\n        nickname: $nickname\n        summary: $summary\n        text: $text\n        ratings: $ratings\n      }\n    ) {\n      review {\n        nickname\n        summary\n        text\n        average_rating\n        created_at\n      }\n    }\n  }\n`;\n\n\n\n/**\n * Submits a product review.\n * @param {Object} reviewData - The review data, including sku, nickname, summary, text, and an array of ratings.\n * @param {Array<Object>} reviewData.ratings - Array of rating objects, e.g., [{ id: \"base64RatingId\", value_id: \"base64RatingValueId\" }]\n * @returns {Promise<Object>} The result of the mutation\n */\nexport const addProductReview = async (reviewData) => {\n // reviewData now expects a 'ratings' array directly\n const { sku, nickname, summary, text, ratings } = reviewData;\n\n if (!ratings || ratings.length === 0) {\n   // Handle cases where no ratings are provided, if necessary,\n   // or ensure the form always provides at least one.\n   // For now, we assume 'ratings' is a valid array as per ProductReviewRatingInput.\n   console.warn('No ratings provided for review.');\n   // Depending on schema, ratings might be optional or required.\n   // If required and empty, GraphQL will throw an error.\n }\n\n try {\n   const { data } = await apolloClient.mutate({\n     mutation: CREATE_PRODUCT_REVIEW_MUTATION,\n     variables: {\n       sku,\n       nickname,\n       summary,\n       text,\n       ratings, // Pass the ratings array directly\n     },\n   });\n\n    if (data.createProductReview && data.createProductReview.review) {\n      return {\n        success: true,\n        review: data.createProductReview.review,\n        message: 'Review submitted successfully.'\n      };\n    }\n\n    return {\n      success: false,\n      message: 'Failed to submit review. Please check details.'\n    };\n\n  } catch (error) {\n    console.error('Error submitting product review:', error);\n    \n    let errorMessage = 'An unexpected error occurred while submitting your review.';\n    if (error.graphQLErrors?.length > 0) {\n      errorMessage = error.graphQLErrors.map(err => err.message).join(' ');\n    } else if (error.networkError) {\n      errorMessage = 'A network error occurred. Please check your connection.';\n    } else if (error.message) {\n      errorMessage = error.message;\n    }\n\n    return {\n      success: false,\n      message: errorMessage,\n      error\n    };\n  }\n};\n\nconst GET_PRODUCT_REVIEW_RATINGS_METADATA_QUERY = gql`\n  query GetProductReviewRatingsMetadata {\n    productReviewRatingsMetadata {\n      items {\n        id # This is the base64 encoded ID for the rating criteria (e.g., \"Quality\")\n        name # e.g., \"Quality\", \"Price\"\n        values { # These are the possible options for this rating criteria\n          value_id # This is the base64 encoded ID for the specific rating option (e.g., \"5 stars for Quality\")\n          value # e.g., 1, 2, 3, 4, 5 (numeric representation)\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Fetches the metadata for product review ratings.\n * This provides the necessary IDs for submitting reviews.\n * @returns {Promise<Object>} The rating metadata or an error object.\n */\nexport const getProductReviewRatingsMetadata = async () => {\n  try {\n    const { data } = await apolloClient.query({\n      query: GET_PRODUCT_REVIEW_RATINGS_METADATA_QUERY,\n      fetchPolicy: 'cache-first', // Good candidate for caching\n    });\n\n    if (data.productReviewRatingsMetadata && data.productReviewRatingsMetadata.items) {\n      return {\n        success: true,\n        metadata: data.productReviewRatingsMetadata.items,\n      };\n    }\n    return { success: true, metadata: [], message: 'No rating metadata found.' };\n  } catch (error) {\n    console.error('Error fetching product review ratings metadata:', error);\n    let errorMessage = 'An unexpected error occurred while fetching rating metadata.';\n    if (error.graphQLErrors && error.graphQLErrors.length > 0) {\n      errorMessage = error.graphQLErrors.map(err => err.message).join(' ');\n    } else if (error.networkError) {\n      errorMessage = 'A network error occurred. Please check your connection.';\n    }\n    return { success: false, message: errorMessage, error };\n  }\n};\n\n\n// Updated Get reviews query\nconst GET_PRODUCT_REVIEWS_QUERY = gql`\n  query GetProductReviews($sku: String!) {\n    products(filter: { sku: { eq: $sku } }) {\n      items {\n        sku\n        name\n        reviews {\n          items {\n            nickname\n            summary\n            text\n            average_rating # Added average_rating\n            created_at\n            ratings_breakdown { # Added ratings_breakdown\n              name\n              value\n            }\n          }\n          page_info {\n            page_size\n            current_page\n            total_pages\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Fetches product reviews for a given SKU.\n * @param {string} sku - The product SKU.\n * @returns {Promise<Object>} The reviews data or an error object.\n */\nexport const getProductReviews = async (sku) => {\n  try {\n    const { data } = await apolloClient.query({\n      query: GET_PRODUCT_REVIEWS_QUERY,\n      variables: { sku },\n      fetchPolicy: 'network-only'\n    });\n\n    if (data.products && data.products.items.length > 0) {\n      return {\n        success: true,\n        reviews: data.products.items[0].reviews.items || [],\n        page_info: data.products.items[0].reviews.page_info\n      };\n    }\n\n    return { success: true, reviews: [], message: 'No reviews found or product does not exist.' };\n  } catch (error) {\n    console.error('Error fetching product reviews:', error);\n    let errorMessage = 'An unexpected error occurred while fetching reviews.';\n    if (error.graphQLErrors && error.graphQLErrors.length > 0) {\n      errorMessage = error.graphQLErrors.map(err => err.message).join(' ');\n    } else if (error.networkError) {\n      errorMessage = 'A network error occurred. Please check your connection.';\n    }\n    return { success: false, message: errorMessage, error };\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { addProductReview, getProductReviewRatingsMetadata } from '../../api/review';\n\nconst ProductReviewForm = ({ productSku, onSubmitReviewSuccess }) => {\n  const [ratingsMetadata, setRatingsMetadata] = useState([]);\n  const [selectedRatings, setSelectedRatings] = useState({}); // E.g., { \"ratingId1\": { value_id: \"...\", numeric_value: 3 }, ... }\n  const [nickname, setNickname] = useState('');\n  const [summary, setSummary] = useState('');\n  const [reviewText, setReviewText] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n  const [isLoadingRatings, setIsLoadingRatings] = useState(true);\n  const [ratingsError, setRatingsError] = useState(null);\n\n  useEffect(() => {\n    const fetchRatingsMetadata = async () => {\n      try {\n        setIsLoadingRatings(true);\n        setRatingsError(null);\n        const result = await getProductReviewRatingsMetadata();\n        if (result.success) {\n          setRatingsMetadata(result.metadata || []);\n        } else {\n          setRatingsError(result.message || 'Failed to load rating options.');\n          setRatingsMetadata([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching rating metadata:\", error);\n        setRatingsError('An error occurred while loading rating options.');\n        setRatingsMetadata([]);\n      } finally {\n        setIsLoadingRatings(false);\n      }\n    };\n\n    fetchRatingsMetadata();\n  }, []);\n\n  const handleRatingChange = (ratingId, valueId, numericValue) => {\n    setSelectedRatings(prevRatings => ({\n      ...prevRatings,\n      [ratingId]: { value_id: valueId, numeric_value: numericValue },\n    }));\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    ratingsMetadata.forEach(ratingMeta => {\n      if (!selectedRatings[ratingMeta.id] || !selectedRatings[ratingMeta.id].value_id) {\n        errors[`rating_${ratingMeta.id}`] = `Please select a rating for ${ratingMeta.name}.`;\n      }\n    });\n    if (!nickname.trim()) errors.nickname = 'Nickname is required.';\n    if (!summary.trim()) errors.summary = 'Summary is required.';\n    if (!reviewText.trim()) errors.reviewText = 'Review text is required.';\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      const ratingsForApi = ratingsMetadata.map(meta => ({\n        id: meta.id,\n        value_id: selectedRatings[meta.id]?.value_id,\n      }));\n\n      const reviewData = {\n        sku: productSku,\n        nickname,\n        summary,\n        text: reviewText,\n        ratings: ratingsForApi,\n      };\n\n      try {\n        const result = await addProductReview(reviewData);\n        if (result.success) {\n          alert(result.message || 'Review submitted successfully!');\n          setSelectedRatings({});\n          setNickname('');\n          setSummary('');\n          setReviewText('');\n          setFormErrors({});\n          if (onSubmitReviewSuccess) {\n            onSubmitReviewSuccess(result.review);\n          }\n        } else {\n          alert(`Failed to submit review: ${result.message}`);\n        }\n      } catch (error) {\n        console.error(\"Error in review submission:\", error);\n        alert('An error occurred while submitting your review. Please try again.');\n      }\n    }\n  };\n\n  if (isLoadingRatings) {\n    return <p>Loading rating options...</p>;\n  }\n\n  if (ratingsError) {\n    return <p className=\"text-red-500\">{ratingsError}</p>;\n  }\n\n  if (ratingsMetadata.length === 0) {\n    return <p>No rating options available for this product.</p>\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6 mt-6 p-6 border border-gray-300 rounded-lg shadow-md bg-white\">\n      <h3 className=\"text-xl font-semibold text-gray-800 mb-4\">Write a Review</h3>\n      \n      {ratingsMetadata.map((ratingMeta) => (\n        <div key={ratingMeta.id} className=\"py-2\">\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            {ratingMeta.name} <span className=\"text-red-500\">*</span>\n          </label>\n          <div className=\"flex space-x-1\">\n            {ratingMeta.values.map((option) => {\n              const selectedNumericValueForCriterion = selectedRatings[ratingMeta.id]?.numeric_value;\n              const isStarActive = option.value <= selectedNumericValueForCriterion;\n\n              return (\n                <button\n                  type=\"button\"\n                  key={option.value_id}\n                  onClick={() => handleRatingChange(ratingMeta.id, option.value_id, option.value)}\n                  className={`text-3xl transition-colors duration-150 ease-in-out\n                              ${isStarActive ? 'text-yellow-400' : 'text-gray-300 hover:text-yellow-300'}\n                              ${selectedRatings[ratingMeta.id]?.value_id === option.value_id ? 'scale-110' : ''}`}\n                  aria-label={`Rate ${option.value} for ${ratingMeta.name}`}\n                  title={`${option.value} stars`}\n                >\n                  ★\n                </button>\n              );\n            })}\n          </div>\n          {formErrors[`rating_${ratingMeta.id}`] && (\n            <p className=\"text-red-500 text-xs mt-1\">{formErrors[`rating_${ratingMeta.id}`]}</p>\n          )}\n        </div>\n      ))}\n\n      <div>\n        <label htmlFor=\"nickname\" className=\"block text-sm font-medium text-gray-700\">\n          Nickname <span className=\"text-red-500\">*</span>\n        </label>\n        <input\n          type=\"text\"\n          id=\"nickname\"\n          value={nickname}\n          onChange={(e) => setNickname(e.target.value)}\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n        />\n        {formErrors.nickname && <p className=\"text-red-500 text-xs mt-1\">{formErrors.nickname}</p>}\n      </div>\n\n      <div>\n        <label htmlFor=\"summary\" className=\"block text-sm font-medium text-gray-700\">\n          Summary <span className=\"text-red-500\">*</span>\n        </label>\n        <input\n          type=\"text\"\n          id=\"summary\"\n          value={summary}\n          onChange={(e) => setSummary(e.target.value)}\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n        />\n        {formErrors.summary && <p className=\"text-red-500 text-xs mt-1\">{formErrors.summary}</p>}\n      </div>\n\n      <div>\n        <label htmlFor=\"reviewText\" className=\"block text-sm font-medium text-gray-700\">\n          Review <span className=\"text-red-500\">*</span>\n        </label>\n        <textarea\n          id=\"reviewText\"\n          value={reviewText}\n          onChange={(e) => setReviewText(e.target.value)}\n          rows=\"4\"\n          className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n        ></textarea>\n        {formErrors.reviewText && <p className=\"text-red-500 text-xs mt-1\">{formErrors.reviewText}</p>}\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"w-full bg-indigo-600 text-white py-2 px-4 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n      >\n        Submit Review\n      </button>\n    </form>\n  );\n};\n\nexport default ProductReviewForm;","import React from 'react';\n\nconst StarRating = ({ rating, size = \"text-xl\" }) => { // Expects rating on a 0-5 scale\n  const totalStars = 5;\n  // Ensure rating is a number and within 0-5 range for safety, though input should be pre-validated\n  const numericRating = parseFloat(rating);\n  const filledStars = isNaN(numericRating) ? 0 : Math.max(0, Math.min(totalStars, Math.round(numericRating)));\n\n  return (\n    <div className=\"flex\">\n      {[...Array(totalStars)].map((_, i) => (\n        <span key={i} className={`${size} ${i < filledStars ? 'text-yellow-400' : 'text-gray-300'}`}>\n          ★\n        </span>\n      ))}\n    </div>\n  );\n};\n\nconst ProductReviewItem = ({ review }) => {\n  if (!review) {\n    return null;\n  }\n\n  const { nickname, summary, text, created_at, average_rating, ratings_breakdown } = review;\n  const reviewDate = created_at ? new Date(created_at).toLocaleDateString() : 'Date not available';\n\n  // Convert average_rating (0-100 from Magento) to 0-5 scale for StarRating component\n  const overallStars = average_rating ? Math.round(parseFloat(average_rating) / 20) : 0;\n\n  return (\n    <div className=\"border-b border-gray-200 py-6\">\n      <div className=\"flex flex-col sm:flex-row sm:items-center mb-3\">\n        <div className=\"mb-2 sm:mb-0\">\n          <StarRating rating={overallStars} />\n        </div>\n        <h4 className=\"text-lg font-semibold text-gray-800 sm:ml-3\">{summary}</h4>\n      </div>\n      <p className=\"text-sm text-gray-600 mb-2\">\n        By <span className=\"font-medium text-gray-700\">{nickname}</span> on {reviewDate}\n      </p>\n      <p className=\"text-gray-700 text-sm leading-relaxed mb-4\">{text}</p>\n\n      {ratings_breakdown && ratings_breakdown.length > 0 && (\n        <div className=\"mt-3 pt-3 border-t border-gray-100\">\n          <h5 className=\"text-sm font-semibold text-gray-700 mb-2\">Detailed Ratings:</h5>\n          <ul className=\"space-y-1\">\n            {ratings_breakdown.map((breakdownItem, index) => (\n              <li key={index} className=\"flex items-center justify-between text-sm\">\n                <span className=\"text-gray-600\">{breakdownItem.name}:</span>\n                <StarRating rating={parseFloat(breakdownItem.value)} size=\"text-md\" />\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProductReviewItem;","import React from 'react';\nimport { formatPrice } from '../../utils/formatters';\nimport { useConfig } from '../../hooks/useConfig'; // Import useConfig\n\nconst DownloadableProductLinks = ({ product }) => {\n  const { baseMediaUrl } = useConfig(); // Get baseMediaUrl\n  const { downloadable_product_links, downloadable_product_samples, links_purchased_separately } = product;\n\n  const getFileUrl = (filePath) => {\n    if (!filePath) return '#';\n    // Assuming filePath is relative to media/downloadable/files (or similar)\n    // Adjust the base path as per your Magento setup for downloadable files\n    // This might require a specific base URL for downloadable products if different from general media.\n    // For now, using baseMediaUrl as a placeholder, but this might need refinement.\n    // Example: return `${baseMediaUrl}downloadable/files${filePath.startsWith('/') ? '' : '/'}${filePath}`;\n    // Magento often serves downloadable files through a controller, not direct media links before purchase.\n    // For display of *samples*, direct links are more common.\n    // For actual *links*, they are usually placeholder info until purchased.\n    return '#'; // Placeholder, as actual link URL is post-purchase\n  };\n\n  const getSampleLink = (sample) => {\n    if (sample.sample_type === 'url' && sample.sample_url) {\n      return sample.sample_url;\n    }\n    if (sample.sample_type === 'file' && sample.sample_file) {\n      // Construct URL for sample file, e.g., from pub/media/downloadable/files/samples\n      // This path construction is an assumption.\n      return `${baseMediaUrl || ''}downloadable/files/samples${sample.sample_file.startsWith('/') ? '' : '/'}${sample.sample_file}`;\n    }\n    return '#';\n  };\n\n\n  if ((!downloadable_product_links || downloadable_product_links.length === 0) && (!downloadable_product_samples || downloadable_product_samples.length === 0)) {\n    return <p className=\"text-gray-600 mt-4\">No downloadable content available for this product.</p>;\n  }\n\n  return (\n    <div className=\"mt-4 mb-6 space-y-6\">\n      {downloadable_product_links && downloadable_product_links.length > 0 && (\n        <div>\n          <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Downloadable Links</h4>\n          {links_purchased_separately && (\n            <p className=\"text-sm text-gray-500 mb-2\">Links can be purchased separately.</p>\n          )}\n          <ul className=\"space-y-2 list-disc list-inside bg-gray-50 p-4 rounded-md border\">\n            {downloadable_product_links.map(link => {\n              const linkSampleUrl = getSampleLink(link); // A link itself can have a sample\n              return (\n                <li key={link.id || link.link_id} className=\"text-gray-700\">\n                  {link.title || 'Downloadable Link'}\n                  {link.price > 0 && (\n                    <span className=\"ml-2 text-sm text-indigo-600\">\n                      (+{formatPrice(link.price, product.price_range?.minimum_price?.final_price?.currency || 'USD')})\n                    </span>\n                  )}\n                  {/* Display sample for the link if available */}\n                  {linkSampleUrl !== '#' && (\n                    <a\n                      href={linkSampleUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"ml-3 text-sm text-indigo-500 hover:text-indigo-700 underline\"\n                    >\n                      Sample\n                    </a>\n                  )}\n                  {/* link.link_file would contain the path to the actual file, not directly linkable pre-purchase */}\n                  {/* <p className=\"text-xs text-gray-400\">File: {link.link_file}</p> */}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n\n      {downloadable_product_samples && downloadable_product_samples.length > 0 && (\n        <div className=\"mt-6\">\n          <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Product Samples</h4>\n          <ul className=\"space-y-2 list-disc list-inside bg-gray-50 p-4 rounded-md border\">\n            {downloadable_product_samples.map(sample => {\n              const sampleUrl = getSampleLink(sample);\n              return (\n                <li key={sample.id || sample.sample_id} className=\"text-gray-700\">\n                  {sample.title || 'Sample File'}\n                  {sampleUrl !== '#' ? (\n                    <a\n                      href={sampleUrl}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      className=\"ml-3 text-sm text-indigo-500 hover:text-indigo-700 underline\"\n                    >\n                      Download Sample\n                    </a>\n                  ) : (\n                    <span className=\"ml-3 text-sm text-gray-400\">(Sample not available)</span>\n                  )}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DownloadableProductLinks;","import React, { useState, useEffect, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatPrice } from '../../utils/formatters';\n\nconst GroupedProductItems = ({ product, onGroupedItemsChange }) => {\n  const { items: groupedItems } = product;\n  // State to hold quantities for each item in the group\n  // Keyed by SKU or ID, e.g., { 'SKU1': 2, 'SKU2': 1 }\n  const [itemQuantities, setItemQuantities] = useState({});\n\n  // Initialize quantities based on default_qty or 0\n  useEffect(() => {\n    const initialQuantities = {};\n    if (groupedItems) {\n      groupedItems.forEach(item => {\n        initialQuantities[item.product.sku] = item.qty || 0; // Use default_quantity or 0\n      });\n    }\n    setItemQuantities(initialQuantities);\n    if (onGroupedItemsChange) {\n      onGroupedItemsChange(initialQuantities);\n    }\n  }, [groupedItems, onGroupedItemsChange]);\n\n  const handleQuantityChange = useCallback((sku, newQuantity) => {\n    const qty = parseInt(newQuantity, 10);\n    if (!isNaN(qty) && qty >= 0) {\n      setItemQuantities(prev => {\n        const updatedQuantities = { ...prev, [sku]: qty };\n        if (onGroupedItemsChange) {\n          onGroupedItemsChange(updatedQuantities);\n        }\n        return updatedQuantities;\n      });\n    }\n  }, [onGroupedItemsChange]);\n\n  if (!groupedItems || groupedItems.length === 0) {\n    return <p className=\"text-gray-600 mt-4\">This product has no associated items.</p>;\n  }\n\n  return (\n    <div className=\"mt-4 mb-6\">\n      <h4 className=\"text-lg font-semibold text-gray-800 mb-3\">Included Items</h4>\n      <div className=\"space-y-4\">\n        {groupedItems.map(item => (\n          <div key={item.product.id || item.product.sku} className=\"p-4 border rounded-md shadow-sm bg-gray-50 flex flex-col sm:flex-row justify-between items-start sm:items-center\">\n            <div className=\"flex items-center mb-3 sm:mb-0\">\n              {item.product.small_image?.url && (\n                <img \n                  src={item.product.small_image.url} \n                  alt={item.product.small_image.label || item.product.name} \n                  className=\"w-16 h-16 object-contain mr-4 rounded\"\n                />\n              )}\n              <div>\n                <Link to={`/product/${item.product.url_key}`} className=\"text-indigo-600 hover:underline font-medium\">\n                  {item.product.name}\n                </Link>\n                <p className=\"text-sm text-gray-500\">SKU: {item.product.sku}</p>\n                {item.product.price_range?.minimum_price?.final_price && (\n                  <p className=\"text-sm text-gray-700\">\n                    Price: {formatPrice(item.product.price_range.minimum_price.final_price.value, item.product.price_range.minimum_price.final_price.currency)}\n                  </p>\n                )}\n                 <p className={`text-sm ${item.product.stock_status === 'IN_STOCK' ? 'text-green-600' : 'text-red-500'}`}>\n                  {item.product.stock_status === 'IN_STOCK' ? 'In Stock' : 'Out of Stock'}\n                </p>\n              </div>\n            </div>\n            <div className=\"flex items-center\">\n              <label htmlFor={`qty-${item.product.sku}`} className=\"text-sm font-medium text-gray-700 mr-2 sr-only\">\n                Quantity for {item.product.name}:\n              </label>\n              <input\n                type=\"number\"\n                id={`qty-${item.product.sku}`}\n                min=\"0\"\n                value={itemQuantities[item.product.sku] || 0}\n                onChange={(e) => handleQuantityChange(item.product.sku, e.target.value)}\n                className=\"w-20 py-1 px-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                disabled={item.product.stock_status !== 'IN_STOCK'}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GroupedProductItems;","\n// SVG icons components remain the same...\n// SVG icons as components to replace Heroicons\nconst HeartIcon = ({ filled }) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className={`h-5 w-5 ${\n      filled ? \"text-red-500 fill-current\" : \"text-gray-500\"\n    }`}\n    viewBox=\"0 0 20 20\"\n    fill={filled ? \"currentColor\" : \"none\"}\n    stroke=\"currentColor\"\n    strokeWidth={filled ? \"0\" : \"1.5\"}\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nconst ShoppingCartIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-5 w-5\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\"\n    />\n  </svg>\n);\n\nconst StarIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-5 w-5\"\n    fill=\"none\"\n    viewBox=\"0 0 24 24\"\n    stroke=\"currentColor\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\n    />\n  </svg>\n);\n\nconst StarSolidIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"h-5 w-5\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n  </svg>\n);\nexport { HeartIcon, ShoppingCartIcon, StarIcon, StarSolidIcon };","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useCategory } from \"../context/CategoryContext\";\nimport useProduct from \"../hooks/useProduct\";\nimport { useWishlist } from \"../context/WishlistContext\";\nimport { isAuthenticated } from \"../api/auth\";\nimport LoadingSpinner from \"../utils/Loader\";\nimport ErrorMessage from \"../components/ui/ErrorMessage\";\nimport { formatPrice } from \"../utils/formatters\";\nimport AddToCartButton from \"../components/cart/AddToCartButton\";\nimport Seo from \"../components/Seo/seo\";\nimport ProductReviewForm from \"../components/product/ProductReviewForm\";\nimport ProductReviewItem from \"../components/product/ProductReviewItem\";\nimport { getProductReviews } from \"../api/review\";\nconst  ConfigurableProductOptions  = React.lazy(() => import ( \"../components/product/ConfigurableProductOptions\"));\nconst  BundleProductOptions = React.lazy(() => import ( \"../components/product/BundleProductOptions\"));\nimport DownloadableProductLinks from \"../components/product/DownloadableProductLinks\";\nimport GroupedProductItems from \"../components/product/GroupedProductItems\";\nimport {\n  HeartIcon,\n  ShoppingCartIcon,\n  StarIcon,\n  StarSolidIcon,\n\n} from \"../components/ui/Icons\";\n\nconst ProductDetailPage = () => {\n  const { urlKey } = useParams();\n  const navigate = useNavigate();\n  const user = isAuthenticated();\n\n  // Product data and state\n  const { product, loading, error, getProductByUrlKey } = useProduct();\n  const { isInWishlist, addItemToWishlist, removeItemFromWishlist } = useWishlist();\n  \n  // Component state\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [quantity, setQuantity] = useState(1);\n  const [activeTab, setActiveTab] = useState(\"description\");\n  const [reviews, setReviews] = useState([]);\n  const [reviewsLoading, setReviewsLoading] = useState(false);\n  const [reviewsError, setReviewsError] = useState(null);\n  \n  // Product variant state\n  const [selectedVariant, setSelectedVariant] = useState(null);\n  const [selectedConfigurableOptions, setSelectedConfigurableOptions] = useState({});\n  const [selectedBundleItems, setSelectedBundleItems] = useState({});\n  const [currentBundlePrice, setCurrentBundlePrice] = useState(null);\n  const [groupedItemQuantities, setGroupedItemQuantities] = useState({});\n\n  // Memoized values\n  const isProductInWishlist = useMemo(() => {\n    return product && isInWishlist(selectedVariant?.product?.id || product.id);\n  }, [product, selectedVariant, isInWishlist]);\n\n  const displayProduct = selectedVariant?.product || product;\n  const currentPriceInfo = useMemo(() => {\n    if (product?.type_id === \"bundle\" && currentBundlePrice !== null) {\n      return {\n        final_price: {\n          value: currentBundlePrice,\n          currency: product.price_range.minimum_price.final_price.currency,\n        },\n        regular_price: product.price_range.minimum_price.regular_price,\n        discount: product.price_range.minimum_price.discount,\n      };\n    }\n    return displayProduct?.price_range?.minimum_price || {};\n  }, [product, displayProduct, currentBundlePrice]);\n\n  const { regular_price, final_price, discount } = currentPriceInfo;\n  const isOnSale = useMemo(() => \n    discount && (discount.amount_off > 0 || discount.percent_off > 0),\n    [discount]\n  );\n\n  // Handlers\n  const handleWishlistClick = useCallback(async () => {\n    if (!user) {\n      navigate(\"/login\", { state: { from: `/product/${urlKey}` } });\n      return;\n    }\n\n    try {\n      if (isProductInWishlist) {\n        await removeItemFromWishlist(product.id);\n      } else {\n        await addItemToWishlist(product.sku);\n      }\n    } catch (err) {\n      console.error(\"Wishlist operation failed:\", err);\n    }\n  }, [user, isProductInWishlist, product, selectedVariant, urlKey]);\n\n  const handleVariantChange = useCallback((variant, options) => {\n    setSelectedVariant(variant);\n    setSelectedConfigurableOptions(options);\n    if (variant?.product?.small_image?.url) {\n      setSelectedImage(variant.product.small_image.url);\n    } else if (product?.image?.url) {\n      setSelectedImage(product.image.url);\n    }\n  }, [product]);\n\n  const handleBundleSelectionChange = useCallback((selections, totalPrice) => {\n    setSelectedBundleItems(selections);\n    setCurrentBundlePrice(totalPrice);\n  }, []);\n\n  const handleGroupedItemsChange = useCallback((quantities) => {\n    setGroupedItemQuantities(quantities);\n  }, []);\n\n  const handleReviewSubmitted = useCallback(() => {\n    if (product?.sku) {\n      fetchReviews(product.sku);\n    }\n  }, [product?.sku]);\n\n  const handleQuantityChange = useCallback((e) => {\n    const value = parseInt(e.target.value);\n    if (value > 0) setQuantity(value);\n   \n  }, []);\n  const incrementQuantity = useCallback(() => \n    setQuantity(prev => Math.min(prev + 1, 999)), []);\n    \n  const decrementQuantity = useCallback(() => \n    setQuantity(prev => Math.max(prev - 1, 1)), []);\n\n  // Data fetching\n  const fetchReviews = useCallback(async (sku) => {\n    if (!sku) return;\n    setReviewsLoading(true);\n    setReviewsError(null);\n    try {\n      const result = await getProductReviews(sku);\n      if (result.success) {\n        setReviews(result.reviews || []);\n      } else {\n        setReviewsError(result.message || \"Failed to load reviews.\");\n        setReviews([]);\n      }\n    } catch (error) {\n      setReviewsError(\"An error occurred while fetching reviews.\");\n      setReviews([]);\n    } finally {\n      setReviewsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchProductData = async () => {\n      if (!urlKey) return;\n      try {\n        const productData = await getProductByUrlKey(urlKey);\n        setSelectedImage(\n          productData?.media_gallery?.[0]?.url || \n          productData?.small_image?.url || \n          null\n        );\n      } catch (err) {\n        console.error(\"Failed to fetch product:\", err);\n      }\n    };\n    fetchProductData();\n  }, [urlKey, getProductByUrlKey]);\n\n  useEffect(() => {\n    if (product?.sku) {\n      fetchReviews(product.sku);\n    }\n  }, [product?.sku, fetchReviews]);\n\n  // Early returns for loading/error states\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex justify-center items-center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error || !product) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <ErrorMessage message={error || `Product \"${urlKey}\" not found`} />\n      </div>\n    );\n  }\n\n  // Main render\n  return (\n    <>\n      <Seo\n        title={displayProduct.meta_title || displayProduct.name}\n        description={displayProduct.meta_description || displayProduct.description?.html}\n        ogImage={selectedImage || displayProduct.image?.url}\n        canonicalUrl={`https://example.com/products/${product.url_key}`}\n      />\n\n      <div className=\"bg-gray-50\">\n        {/* Breadcrumbs */}\n        <div className=\"container mx-auto px-4 py-4\">\n          <nav className=\"text-sm\">\n            <ol className=\"flex items-center space-x-2\">\n              <li className=\"flex items-center\">\n                <a href=\"/\" className=\"text-gray-500 hover:text-indigo-600\">Home</a>              \n              <span className=\"mx-2 text-gray-400\">/</span>\n              </li> \n              <li className=\"text-indigo-600 font-medium\">{product.name}</li>\n            </ol>\n          </nav>\n        </div>\n\n        {/* Product Main Section */}\n        <div className=\"container mx-auto px-4 py-8\">\n          <div className=\"flex flex-col md:flex-row -mx-4\">\n            {/* Product Gallery */}\n            <div className=\"md:flex-1 px-4 mb-6 md:mb-0\">\n              <div className=\"h-64 md:h-80 rounded-lg bg-gray-100 mb-4 flex items-center justify-center\">\n                <img\n                  src={selectedImage || displayProduct.small_image?.url}\n                  alt={displayProduct.name}\n                 loading=\"eager\"\n                  className=\"max-h-full max-w-full object-contain \"\n                  width=\"300px\"\n                  height=\"300px\"\n                />\n              </div>\n\n              {/* Image Thumbnails */}\n              {product.media_gallery?.length > 0 && (\n                <div className=\"flex flex-wrap -mx-2 mb-4\">\n                  {product.media_gallery.map((image, index) => (\n                    <div\n                      key={image.url || index}\n                      className=\"w-1/4 px-2 mb-4\"\n                      onClick={() => setSelectedImage(image.url)}\n                    >\n                      <div className={`h-24 rounded-lg bg-gray-100 flex items-center justify-center cursor-pointer ${\n                        image.url === selectedImage ? \"ring-2 ring-indigo-500\" : \"\"\n                      }`}>\n                        <img\n                          src={image.url}\n                          alt={image.label || `${product.name} thumbnail ${index + 1}`}\n                          loading=\"lazy\"\n                          className=\"max-h-full max-w-full object-contain w-[100px] h-[00px] \"\n                          width=\"100px\"\n                          height=\"100px\"\n                        />\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Product Info */}\n            <div className=\"md:flex-1 px-4\">\n              <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">\n                {displayProduct.name}\n              </h1>\n\n              <div className=\"mb-4 space-y-2\">\n                <div className=\"flex items-center\">\n                  <span className=\"font-bold text-gray-700 mr-2\">SKU:</span>\n                  <span className=\"text-gray-600\">{displayProduct.sku}</span>\n                </div>\n                \n                <div className=\"flex items-center\">\n                  <span className=\"font-bold text-gray-700 mr-2\">Availability:</span>\n                  <span className={\n                    displayProduct.stock_status === \"IN_STOCK\" \n                      ? \"text-green-600\" \n                      : \"text-red-600\"\n                  }>\n                    {displayProduct.stock_status === \"IN_STOCK\" \n                      ? \"In Stock\" \n                      : \"Out of Stock\"}\n                  </span>\n                </div>\n              </div>\n{/*   Product Type Specific Components */}\n              {product.type_id === \"configurable\" && product.configurable_options && (\n                <ConfigurableProductOptions\n                  product={product}\n                  onVariantChange={handleVariantChange}\n                  selectedOptions={selectedConfigurableOptions}\n                />\n              )}\n              \n              {product.type_id === \"bundle\" && product.items && (\n                <BundleProductOptions\n                  product={product} \n                  onBundleSelectionChange={handleBundleSelectionChange}\n                />\n              )}\n              \n              {product.type_id === \"downloadable\" && (\n                <DownloadableProductLinks product={product} />\n              )}\n              \n              {product.type_id === \"grouped\" && product.items && (\n                <GroupedProductItems\n                  product={product}\n                  onGroupedItemsChange={handleGroupedItemsChange}\n                />\n              )}\n\n              {/* Price Display */}\n              <div className=\"mb-4\">\n                {isOnSale ? (\n                  <div className=\"flex items-baseline\">\n                    <span className=\"text-3xl font-bold text-indigo-600 mr-2\">\n                      {formatPrice(final_price.value, final_price.currency)}\n                    </span>\n                    <span className=\"text-lg text-gray-500 line-through\">\n                      {formatPrice(regular_price.value, regular_price.currency)}\n                    </span>\n                    <span className=\"ml-2 px-2 py-1 bg-red-100 text-red-800 text-xs font-semibold rounded\">\n                      SALE\n                    </span>\n                  </div>\n                ) : (\n                  <span className=\"text-3xl font-bold text-indigo-600\">\n                    {formatPrice(final_price.value, final_price.currency)}\n                  </span>\n                )}\n              </div>\n\n              {/* Add to Cart Section */}\n              <div className=\"mb-6\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"flex items-center border border-gray-300 rounded\">\n                    <button\n                      className=\"py-2 px-4 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-l\"\n                      onClick={decrementQuantity}\n                      aria-label=\"Decrease quantity\"\n                    >\n                      -\n                    </button>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"999\"\n                      value={quantity}\n                      onChange={handleQuantityChange}\n                      className=\"py-2 px-4 text-center w-16 border-none focus:outline-none focus:ring-0\"\n                      aria-label=\"Quantity\"\n                    />\n                    <button\n                      className=\"py-2 px-4 bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-r\"\n                      onClick={incrementQuantity}\n                      aria-label=\"Increase quantity\"\n                    >\n                      +\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"flex space-x-4\">\n                  <AddToCartButton\n                    product={displayProduct}\n                    quantity={quantity}\n                    selectedOptions={\n                      product.type_id === \"configurable\" \n                        ? selectedConfigurableOptions \n                        : undefined\n                    }\n                    bundleSelections={\n                      product.type_id === \"bundle\" \n                        ? selectedBundleItems \n                        : undefined\n                    }\n                    groupedItemsQuantities={\n                      product.type_id === \"grouped\" \n                        ? groupedItemQuantities \n                        : undefined\n                    }\n                    disabled={\n                      (product.type_id !== \"grouped\" && displayProduct.stock_status !== \"IN_STOCK\") ||\n                      (product.type_id === \"configurable\" && !selectedVariant) ||\n                      (product.type_id === \"bundle\" && \n                        (!selectedBundleItems || \n                         Object.keys(selectedBundleItems).length === 0 ||\n                         (product.items && \n                          !product.items.every(item => \n                            item.required ? selectedBundleItems[item.option_id] : true\n                          )))) ||\n                      (product.type_id === \"grouped\" && \n                        (!groupedItemQuantities || \n                         Object.values(groupedItemQuantities).every(qty => qty === 0) ||\n                         (product.items && \n                          Object.entries(groupedItemQuantities).some(([sku, qty]) => {\n                            if (qty > 0) {\n                              const itemInGroup = product.items.find(it => it.product.sku === sku);\n                              return !itemInGroup || itemInGroup.product.stock_status !== \"IN_STOCK\";\n                            }\n                            return false;\n                          }))))\n                    }\n                  >\n                    <ShoppingCartIcon />                  \n                  </AddToCartButton>\n                  \n                  <button\n                    onClick={handleWishlistClick}\n                    className={`border ${\n                      isProductInWishlist \n                        ? \"border-red-300 bg-red-50\" \n                        : \"border-gray-300\"\n                    } text-gray-700 py-3 px-6 rounded-lg hover:bg-gray-100 transition-colors flex items-center`}\n                    aria-label={isProductInWishlist ? \"Remove from wishlist\" : \"Add to wishlist\"}\n                  >\n                    <HeartIcon filled={isProductInWishlist} />\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Tabs */}\n          <div className=\"mb-6\">\n            <div className=\"flex border-b border-gray-200\">\n              {[\"description\", \"details\", \"reviews\"].map((tab) => (\n                <button\n                  key={tab}\n                  className={`py-2 px-4 font-medium capitalize ${\n                    activeTab === tab\n                      ? \"text-indigo-600 border-b-2 border-indigo-600\"\n                      : \"text-gray-500 hover:text-indigo-600\"\n                  }`}\n                  onClick={() => setActiveTab(tab)}\n                >\n                  {tab}\n                </button>\n              ))}\n            </div>\n\n            <div className=\"py-4\">\n              {activeTab === \"description\" && (\n                <div\n                  className=\"prose max-w-none text-gray-600\"\n                  dangerouslySetInnerHTML={{\n                    __html: product.description?.html || \"No description available\",\n                  }}\n                />\n              )}\n\n              {activeTab === \"details\" && (\n                <div className=\"text-gray-600\">\n                  <h3 className=\"text-lg font-bold mb-4\">Product Specifications</h3>\n                  <div className=\"prose max-w-none\">\n                    <p>\n                      <strong>Type:</strong>{\" \"}\n                      <span className=\"capitalize\">\n                        {product.type_id?.replace(/_/g, \" \") || \"N/A\"}\n                      </span>\n                    </p>\n                    <p>\n                      <strong>SKU:</strong> {displayProduct.sku}\n                    </p>\n                    {product.weight && (\n                      <p>\n                        <strong>Weight:</strong> {product.weight}\n                      </p>\n                    )}\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: product.short_description?.html || \"\",\n                      }}\n                    />\n                  </div>\n                </div>\n              )}\n\n              {activeTab === \"reviews\" && (\n                <div className=\"text-gray-600\">\n                  <h3 className=\"text-lg font-bold mb-4\">Customer Reviews</h3>\n                  {reviewsLoading && <LoadingSpinner />}\n                  {reviewsError && <ErrorMessage message={reviewsError} />}\n                  \n                  {!reviewsLoading && !reviewsError && (\n                    <>\n                      {reviews.length === 0 ? (\n                        <p className=\"text-gray-500 italic mb-4\">\n                          No reviews yet. Be the first to review this product!\n                        </p>\n                      ) : (\n                        <div className=\"space-y-6 mb-6\">\n                          {reviews.map((review, index) => (\n                            <ProductReviewItem \n                              key={`${review.created_at}-${index}`} \n                              review={review} \n                            />\n                          ))}\n                        </div>\n                      )}\n                    </>\n                  )}\n                  \n                  {user ? (\n                    <ProductReviewForm\n                      productSku={product.sku}\n                      onSubmitReviewSuccess={handleReviewSubmitted}\n                    />\n                  ) : (\n                    <p className=\"text-gray-600\">\n                      Please{\" \"}\n                      <button\n                        onClick={() =>\n                          navigate(\"/login\", {\n                            state: { from: `/product/${urlKey}` },\n                          })\n                        }\n                        className=\"text-indigo-600 hover:underline\"\n                      >\n                        log in\n                      </button>{\" \"}\n                      to write a review.\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(ProductDetailPage);"],"file":"assets/js/ProductDetailPage-ByZPdxJF.js"}