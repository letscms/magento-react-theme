{"version":3,"file":"useProduct-BzMN_9cj.js","sources":["../../../src/hooks/useProduct.jsx"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { useProducts as useProductContext } from '../context/ProductContext'; // Renamed to avoid conflict\n\n/**\n * Custom hook for product operations, now using ProductContext.\n * This hook can be used to access product data and functions from the context,\n * and can also include additional view-specific logic or transformations.\n * @returns {Object} Product methods and state from context, plus any local enhancements.\n */\nexport const useProduct = () => {\n  const context = useProductContext();\n\n  // Local state for specific needs of this hook, if any.\n  // For example, if we need to transform data from context or manage UI state.\n  const [currentProductDetails, setCurrentProductDetails] = useState(null);\n  const [currentProductLoading, setCurrentProductLoading] = useState(false);\n  const [currentProductError, setCurrentProductError] = useState(null);\n  const [relatedProducts, setRelatedProducts] = useState([]);\n\n  // Expose all methods and data from context\n  const {\n    // Product collections from context\n    featuredProducts,\n    newProducts,\n    bestSellingProducts,\n    \n    productFilters, // Category-specific filters from context\n    globalProductAggregations, // Global aggregations from context\n    \n    // Loading and error states from context\n    loading: contextLoading, // Rename to avoid conflict if local loading is used\n    error: contextError,     // Rename to avoid conflict if local error is used\n    lastFetched,\n    \n    // Methods to get products from context\n    getProducts,          // General product list\n    // getProductById,    // These will be wrapped by local versions below\n    // getProductBySku,\n    // getProductByUrlKey,\n    searchProducts,\n    getProductsByCategory, // Products filtered by category\n    getProductFilters,     // Method to fetch category-specific filters\n    fetchGlobalProductAggregations, // Method to fetch global aggregations\n    \n    // Related product methods from context\n    // getRelatedProducts, // Context provides this, let's see if we need a local version\n    getCrossSellProducts,\n    getUpSellProducts,\n    \n    // Review methods from context\n    getProductReviews,\n    submitProductReview,\n    \n    // Stock methods from context\n    getProductStockStatus,\n    \n    // Refresh method from context\n    refreshAllProducts\n  } = context;\n\n  // Wrapper for getProductBySku to manage local state for the specific product being viewed\n  const fetchProductDetailsBySku = useCallback(async (sku) => {\n    setCurrentProductLoading(true);\n    setCurrentProductError(null);\n    try {\n      const productData = await context.getProductBySku(sku);\n      setCurrentProductDetails(productData);\n      if (productData && productData.sku) {\n        const related = await context.getRelatedProducts(productData.sku);\n        setRelatedProducts(related || []);\n      }\n      return productData;\n    } catch (err) {\n      setCurrentProductError(err.message || 'Failed to fetch product details by SKU');\n      return null;\n    } finally {\n      setCurrentProductLoading(false);\n    }\n  }, [context]);\n\n\n  const getProductsdata = useCallback( async (searchCriteria) => {\n  try {\n    const  data  = await context.getProducts(searchCriteria)\n    return {\n      items: data.items,\n      total_count: data.total_count,\n      page_info: data.page_info\n    };\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n}, [context]);\n\n  // Wrapper for getProductById\n  const fetchProductDetailsById = useCallback(async (id) => {\n    setCurrentProductLoading(true);\n    setCurrentProductError(null);\n    try {\n      const productData = await context.getProductById(id);\n      setCurrentProductDetails(productData);\n      if (productData && productData.sku) {\n        const related = await context.getRelatedProducts(productData.sku);\n        setRelatedProducts(related || []);\n      }\n      return productData;\n    } catch (err) {\n      setCurrentProductError(err.message || 'Failed to fetch product details by ID');\n      return null;\n    } finally {\n      setCurrentProductLoading(false);\n    }\n  }, [context]);\n  \n  // Wrapper for getProductByUrlKey\n  const fetchProductDetailsByUrlKey = useCallback(async (urlKey) => {\n    setCurrentProductLoading(true);\n    setCurrentProductError(null);\n    try {\n      const productData = await context.getProductByUrlKey(urlKey);\n      setCurrentProductDetails(productData);\n      if (productData && productData.sku) {\n        const related = await context.getRelatedProducts(productData.sku);\n        setRelatedProducts(related || []);\n      }\n      return productData;\n    } catch (err) {\n      setCurrentProductError(err.message || 'Failed to fetch product details by URL key');\n      return null;\n    } finally {\n      setCurrentProductLoading(false);\n    }\n  }, [context]);\n\n\n  /**\n   * Get a custom attribute value from the currently fetched product details.\n   * @param {string} code - The attribute code\n   * @returns {string|null} The attribute value or null if not found\n   */\n  const getCustomAttribute = useCallback((code) => {\n    if (!currentProductDetails || !currentProductDetails.custom_attributes) return null;\n    \n    const attribute = currentProductDetails.custom_attributes.find(\n      attr => attr.attribute_code === code\n    );\n    return attribute ? attribute.value : null;\n  }, [currentProductDetails]);\n\n  /**\n   * Get product images from the currently fetched product details, ensuring the main image is first.\n   * @returns {Array} Array of product images\n   */\n  const getProductImages = useCallback(() => {\n    if (!currentProductDetails || !currentProductDetails.media_gallery_entries) return [];\n\n    const images = currentProductDetails.media_gallery_entries.map(entry => ({\n      id: entry.id,\n      label: entry.label,\n      position: entry.position,\n      disabled: entry.disabled,\n      file: entry.file,\n      types: entry.types || [], \n    }));\n\n    images.sort((a, b) => {\n      const isAMain = a.types.includes('image');\n      const isBMain = b.types.includes('image');\n\n      if (isAMain && !isBMain) return -1;\n      if (!isAMain && isBMain) return 1;\n      return a.position - b.position;\n    });\n\n    return images;\n  }, [currentProductDetails]);\n\n  // Normalize search criteria - this can remain a local utility if needed\n  // or moved to a general utils file if used elsewhere.\n  const normalizeSearchCriteria = useCallback((criteria) => {\n    if (!criteria || Object.keys(criteria).length === 0) {\n      return { pageSize: 20, currentPage: 1, sortField: 'position', sortDirection: 'ASC' };\n    }\n    const isRestFormat = Object.keys(criteria).some(key => key.includes('searchCriteria'));\n    if (isRestFormat) {\n      const pageSize = criteria['searchCriteria[pageSize]'] || 20;\n      const currentPage = criteria['searchCriteria[currentPage]'] || 1;\n      let sortField = 'position';\n      let sortDirection = 'ASC';\n      if (criteria['searchCriteria[sortOrders][0][field]']) {\n        sortField = criteria['searchCriteria[sortOrders][0][field]'];\n      }\n      if (criteria['searchCriteria[sortOrders][0][direction]']) {\n        sortDirection = criteria['searchCriteria[sortOrders][0][direction]'].toUpperCase();\n      }\n      return {\n        pageSize: parseInt(pageSize, 10),\n        currentPage: parseInt(currentPage, 10),\n        sortField,\n        sortDirection,\n        filterGroups: [] // Assuming filter groups are handled differently or added later\n      };\n    }\n    return {\n      ...criteria,\n      sortDirection: criteria.sortDirection ? criteria.sortDirection.toUpperCase() : 'ASC'\n    };\n  }, []);\n\n\n  // The hook now returns a combination of context values and its own specific logic/state.\n  return {\n    // Data from context (potentially renamed to avoid conflicts)\n    featuredProducts,\n    newProducts,\n    bestSellingProducts,\n    productFilters, // Category-specific filters\n    globalProductAggregations, // Global aggregations\n    contextLoading, // General loading state from context\n    contextError,   // General error state from context\n    lastFetched,\n\n    // Specific product detail state managed by this hook\n    product: currentProductDetails, // The single product detail fetched by this hook's methods\n    relatedProducts, // Related products for the currentProductDetails\n    loading: currentProductLoading, // Loading state for this hook's specific fetch operations\n    error: currentProductError,     // Error state for this hook's specific fetch operations\n\n    // Methods from context (can be used directly)\n    getProducts,          // For fetching lists of products\n    searchProducts,\n    getProductsByCategory,\n    getProductFilters,     // For category filters\n    fetchGlobalProductAggregations, // For global aggregations\n    getCrossSellProducts,\n    getUpSellProducts,\n    getProductReviews,\n    submitProductReview,\n    getProductStockStatus,\n    refreshAllProducts,\ngetProductsdata,\n    // Enhanced/specific methods from this hook\n    getProductById: fetchProductDetailsById, // Now uses context and manages local state\n    getProductBySku: fetchProductDetailsBySku, // Now uses context and manages local state\n    getProductByUrlKey: fetchProductDetailsByUrlKey, // Now uses context and manages local state\n    \n    // Utility methods that might operate on local state or be general helpers\n    getCustomAttribute,\n    getProductImages,\n    normalizeSearchCriteria, // If still needed by components using this hook\n    \n    // Context's getRelatedProducts is also available if needed directly:\n    getRelatedProducts: context.getRelatedProducts \n  };\n};\n\n// Export as both default and named export for flexibility\nexport default useProduct;\n\n\n"],"names":["useProduct","context","useProductContext","currentProductDetails","setCurrentProductDetails","useState","currentProductLoading","setCurrentProductLoading","currentProductError","setCurrentProductError","relatedProducts","setRelatedProducts","featuredProducts","newProducts","bestSellingProducts","productFilters","globalProductAggregations","loading","contextLoading","error","contextError","lastFetched","getProducts","searchProducts","getProductsByCategory","getProductFilters","fetchGlobalProductAggregations","getCrossSellProducts","getUpSellProducts","getProductReviews","submitProductReview","getProductStockStatus","refreshAllProducts","fetchProductDetailsBySku","useCallback","async","sku","productData","getProductBySku","related","getRelatedProducts","err","message","getProductsdata","searchCriteria","data","items","total_count","page_info","fetchProductDetailsById","id","getProductById","fetchProductDetailsByUrlKey","urlKey","getProductByUrlKey","getCustomAttribute","code","custom_attributes","attribute","find","attr","attribute_code","value","getProductImages","media_gallery_entries","images","map","entry","label","position","disabled","file","types","sort","a","b","isAMain","includes","isBMain","normalizeSearchCriteria","criteria","Object","keys","length","pageSize","currentPage","sortField","sortDirection","some","key","toUpperCase","parseInt","filterGroups","product"],"mappings":"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"}