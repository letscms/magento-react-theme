{"version":3,"file":"SearchResults-Ad_GIhkL.js","sources":["../../../src/components/ui/Pagination.jsx","../../../src/pages/SearchResults.jsx"],"sourcesContent":["import React, { memo } from 'react';\n\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\n  // Generate page numbers to display\n  const getPageNumbers = () => {\n    const pages = [];\n    \n    // Always show first page\n    pages.push(1);\n    \n    // Calculate range around current page\n    let rangeStart = Math.max(2, currentPage - 1);\n    let rangeEnd = Math.min(totalPages - 1, currentPage + 1);\n    \n    // Adjust range to always show 3 pages if possible\n    if (rangeEnd - rangeStart < 2) {\n      if (rangeStart === 2) {\n        rangeEnd = Math.min(totalPages - 1, rangeStart + 2);\n      } else if (rangeEnd === totalPages - 1) {\n        rangeStart = Math.max(2, rangeEnd - 2);\n      }\n    }\n    \n    // Add ellipsis before range if needed\n    if (rangeStart > 2) {\n      pages.push('...');\n    }\n    \n    // Add range pages\n    for (let i = rangeStart; i <= rangeEnd; i++) {\n      pages.push(i);\n    }\n    \n    // Add ellipsis after range if needed\n    if (rangeEnd < totalPages - 1) {\n      pages.push('...');\n    }\n    \n    // Always show last page if there is more than one page\n    if (totalPages > 1) {\n      pages.push(totalPages);\n    }\n    \n    return pages;\n  };\n\n  // Handle page click\n  const handlePageClick = (page) => {\n    if (page !== currentPage && page !== '...') {\n      onPageChange(page);\n    }\n  };\n\n  // Handle previous page\n  const handlePrevious = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  // Handle next page\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  // If only one page, don't show pagination\n  if (totalPages <= 1) {\n    return null;\n  }\n\n  const pageNumbers = getPageNumbers();\n\n  return (\n    <nav className=\"flex justify-center\">\n      <ul className=\"flex items-center\">\n        {/* Previous button */}\n        <li>\n          <button\n            onClick={handlePrevious}\n            disabled={currentPage === 1}\n            className={`relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md ${\n              currentPage === 1\n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                : 'bg-white text-gray-700 hover:bg-gray-50'\n            }`}\n          >\n            Previous\n          </button>\n        </li>\n        \n        {/* Page numbers */}\n        {pageNumbers.map((page, index) => (\n          <li key={index}>\n            {page === '...' ? (\n              <span className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700\">\n                ...\n              </span>\n            ) : (\n              <button\n                onClick={() => handlePageClick(page)}\n                className={`relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium ${\n                  page === currentPage\n                    ? 'z-10 bg-indigo-50 border-indigo-500 text-indigo-600'\n                    : 'bg-white text-gray-700 hover:bg-gray-50'\n                }`}\n              >\n                {page}\n              </button>\n            )}\n          </li>\n        ))}\n        \n        {/* Next button */}\n        <li>\n          <button\n            onClick={handleNext}\n            disabled={currentPage === totalPages}\n            className={`relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md ${\n              currentPage === totalPages\n                ? 'bg-gray-100 text-gray-400 cursor-not-allowed'\n                : 'bg-white text-gray-700 hover:bg-gray-50'\n            }`}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default memo(Pagination);","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useProduct } from \"../hooks/useProduct.jsx\";\nimport ProductFilter from \"../components/product/ProductFilter.jsx\";\nimport ProductCard from \"../components/product/ProductCard.jsx\";\nimport LoadingSpinner from \"../components/ui/LoadingSpinner.jsx\";\nimport Seo from \"../components/Seo/seo.jsx\";\nimport ErrorMessage from \"../components/ui/ErrorMessage.jsx\";\nimport EmptyState from \"../components/ui/EmptyState.jsx\";\nimport Pagination from \"../components/ui/Pagination.jsx\"; // Assuming a Pagination component exists\n\nfunction SearchResultsPage() {\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const {\n    searchProducts,\n    globalProductAggregations, // Use global aggregations for search\n    fetchGlobalProductAggregations, // Method to fetch global aggregations\n    contextLoading,\n    contextError,\n  } = useProduct();\n\n  const [displayedProducts, setDisplayedProducts] = useState([]);\n  const [availableFilters, setAvailableFilters] = useState([]); // This will now be populated by globalProductAggregations\n  const [appliedFilters, setAppliedFilters] = useState({});\n  const [sortOption, setSortOption] = useState(\"relevance\"); // Default sort for search\n  const [sortDirection, setSortDirection] = useState(\"DESC\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize] = useState(12);\n  const [totalProducts, setTotalProducts] = useState(0);\n  const [loadingPage, setLoadingPage] = useState(false);\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const query = queryParams.get(\"q\") || \"\";\n    setSearchQuery(query);\n    // Reset states when search query changes\n    setDisplayedProducts([]);\n    setCurrentPage(1);\n    setAppliedFilters({});\n    // Fetch global aggregations for filtering options\n    const loadGlobalFilters = async () => {\n      if (query) { // Only fetch if there's a search query\n        await fetchGlobalProductAggregations();\n      }\n    };\n    loadGlobalFilters();\n  }, [location.search, fetchGlobalProductAggregations]); // Add fetchGlobalProductAggregations to dependencies\n\n  // Update availableFilters when globalProductAggregations changes from the context\n  useEffect(() => {\n    if (searchQuery) { // Only update if there's a search query\n      setAvailableFilters(globalProductAggregations || []);\n    } else {\n      setAvailableFilters([]);\n    }\n  }, [globalProductAggregations, searchQuery]);\n useEffect(() => {\n  setDisplayedProducts([]);\n    setDisplayedProducts([]);\n    setCurrentPage(1); // Reset page to 1 when filters or category changes\n    \n  }, [ appliedFilters, sortOption, sortDirection]);\n\n  const fetchSearchResults = useCallback(async () => {\n    if (!searchQuery) {\n      setDisplayedProducts([]);\n      setTotalProducts(0);\n      return;\n    }\n    \n    setLoadingPage(true);\n\n    const attributeFilterGroups = Object.entries(appliedFilters)\n      .filter(([, values]) => values.length > 0)\n      .map(([attributeCode, values]) => {\n        // if (attributeCode === \"price\") {\n        //   if (values.length > 0) {\n        //     const priceValue = values[0];\n        //     const [from, to] = priceValue.split(\"_\");\n        //     const priceFilter = { field: \"price\" };\n        //     if (from && from !== \"*\") priceFilter.from = from;\n        //     if (to && to !== \"*\") priceFilter.to = to;\n        //     return { filters: [priceFilter] };\n        //   }\n        //   return null;\n        // }\n        // return {\n        //   filters: values.map((value) => ({\n        //     field: attributeCode,\n        //     value: value,\n        //     condition_type: \"in\",\n        //   })),\n        // };\n      })\n      .filter((group) => group !== null);\n\n    const searchCriteria = {\n      searchQuery,\n      currentPage,\n      pageSize,\n      sortField: sortOption,\n      sortDirection,\n      filterGroups: attributeFilterGroups,\n    };\n    try {\n      const data = await searchProducts(searchCriteria); // Pass the whole criteria object\n      setDisplayedProducts(data?.items || []);\n      setTotalProducts(data?.total_count || 0);\n    } catch (err) {\n      console.error(\"Error fetching search results:\", err);\n      // contextError from useProduct should ideally handle this\n    } finally {\n      setLoadingPage(false);\n    }\n  }, [\n    searchQuery,\n    currentPage,\n    pageSize,\n    sortOption,\n    sortDirection,\n    appliedFilters,\n    searchProducts,\n  ]);\n\n  useEffect(() => {\n    fetchSearchResults();\n  }, [fetchSearchResults]);\n\n  const handleFilterChange = (attributeCode, newValues) => {\n    setAppliedFilters((prev) => {\n      const updated = { ...prev };\n      if (newValues.length === 0) {\n        delete updated[attributeCode];\n      } else {\n        updated[attributeCode] = newValues;\n      }\n      return updated;\n    });\n    setCurrentPage(1); // Reset to first page on filter change\n  };\n\n  const handleSortChange = (e) => {\n    const value = e.target.value;\n    if (value.includes(\"_\")) {\n      \n      const [field, direction] = value.split(\"_\");\n      setSortOption(field);\n      setSortDirection(direction.toUpperCase());\n    } else {\n      setSortOption(value);\n      setSortDirection(\"DESC\"); // Default direction for relevance or if not specified\n    }\n    setCurrentPage(1); // Reset to first page on sort change\n  };\n\n  const handlePageChange = (newPage) => {\n    setCurrentPage(newPage);\n    window.scrollTo(0, 0);\n  };\n\n  const isLoading = contextLoading || loadingPage;\n  const totalPages = Math.ceil(totalProducts / pageSize);\n\n  if (isLoading && displayedProducts.length === 0) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex justify-center items-center h-64\">\n          <LoadingSpinner />\n        </div>\n      </div>\n    );\n  }\n\n  if (contextError) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <ErrorMessage message={contextError.message || \"An error occurred while searching.\"} />\n        <p className=\"mt-4 text-center\">\n          <Link to=\"/\" className=\"text-indigo-600 hover:underline\">\n            Return to homepage\n          </Link>\n        </p>\n      </div>\n    );\n  }\n  \n  if (!searchQuery && !isLoading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <Seo title=\"Search\" description=\"Search for products.\" />\n        <EmptyState message=\"Please enter a search term to find products.\" />\n      </div>\n    );\n  }\n\n\n  return (\n    <>\n      <Seo\n        title={`Search Results for \"${searchQuery}\"`}\n        description={`Find products matching your search for \"${searchQuery}\".`}\n        ogTitle={`Search Results for \"${searchQuery}\"`}\n        ogUrl={`${window.location.origin}${location.pathname}${location.search}`}\n      />\n\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Breadcrumbs */}\n        <nav className=\"mb-6\">\n          <ol className=\"flex flex-wrap text-sm\">\n            <li className=\"flex items-center\">\n              <Link to=\"/\" className=\"text-gray-600 hover:text-indigo-600\">\n                Home\n              </Link>\n              <span className=\"mx-2 text-gray-400\">/</span>\n            </li>\n            <li className=\"flex items-center\">\n              <span className=\"text-indigo-600\">Search Results for \"{searchQuery}\"</span>\n            </li>\n          </ol>\n        </nav>\n\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-4\">\n            Search Results for \"{searchQuery}\"\n          </h1>\n        </div>\n\n        <div className=\"flex flex-col md:flex-row gap-8\">\n          {availableFilters.length > 0 && (\n            <aside className=\"w-full md:w-1/4\">\n              <ProductFilter\n                filters={availableFilters}\n                appliedFilters={appliedFilters}\n                onFilterChange={handleFilterChange}\n              />\n            </aside>\n          )}\n          <main className={`w-full ${availableFilters.length > 0 ? 'md:w-3/4' : 'md:w-full'}`}>\n            <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6\">\n              <div className=\"mb-4 sm:mb-0\">\n                <p className=\"text-gray-600\">\n                  {totalProducts > 0\n                    ? `Showing ${displayedProducts.length} of ${totalProducts} products`\n                    : \"No products found.\"}\n                </p>\n              </div>\n              {totalProducts > 0 && (\n                <div className=\"flex items-center\">\n                  <label htmlFor=\"sort\" className=\"mr-2 text-gray-600\">\n                    Sort by:\n                  </label>\n                  <select\n                    id=\"sort\"\n                    className=\"border rounded p-2 focus:outline-none focus:ring-2 focus:ring-indigo-600\"\n                    value={`${sortOption}_${sortDirection}`}\n                    onChange={handleSortChange}\n                  >\n                    <option value=\"relevance_DESC\">Relevance</option>\n                    <option value=\"name_ASC\">Name (A-Z)</option>\n                    <option value=\"name_DESC\">Name (Z-A)</option>\n                    <option value=\"price_ASC\">Price (Low to High)</option>\n                    <option value=\"price_DESC\">Price (High to Low)</option>\n                    <option value=\"created_at_DESC\">Newest</option>\n                  </select>\n                </div>\n              )}\n            </div>\n\n            {isLoading && displayedProducts.length === 0 ? (\n              <div className=\"flex justify-center items-center h-64\">\n                <LoadingSpinner />\n              </div>\n            ) : !isLoading && displayedProducts.length === 0 && searchQuery ? (\n               <EmptyState message={`No products found for \"${searchQuery}\". Try a different search term or adjust your filters.`} />\n            ) : displayedProducts.length > 0 ? (\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6\">\n                {displayedProducts.map((product, index) => (\n                  <ProductCard\n                    key={product.id || `product-${index}`}\n                    productsdata={[product]}\n                    isLCPCandidate={index === 0 && currentPage === 1}\n                  />\n                ))}\n              </div>\n            ) : null}\n\n            {isLoading && displayedProducts.length > 0 && (\n              <div className=\"flex justify-center my-8\">\n                <LoadingSpinner />\n              </div>\n            )}\n\n            {totalPages > 1 && !isLoading && displayedProducts.length > 0 && (\n              <div className=\"mt-8 flex justify-center\">\n                <Pagination\n                    currentPage={currentPage}\n                    totalPages={totalPages}\n                    onPageChange={handlePageChange}\n                />\n              </div>\n            )}\n          </main>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default SearchResultsPage;"],"names":["memo","currentPage","totalPages","onPageChange","pageNumbers","pages","push","rangeStart","Math","max","rangeEnd","min","i","getPageNumbers","className","children","jsxs","jsxRuntimeExports","jsx","onClick","disabled","map","page","index","handlePageClick","SearchResultsPage","location","useLocation","searchQuery","setSearchQuery","useState","searchProducts","globalProductAggregations","fetchGlobalProductAggregations","contextLoading","contextError","useProduct","displayedProducts","setDisplayedProducts","availableFilters","setAvailableFilters","appliedFilters","setAppliedFilters","sortOption","setSortOption","sortDirection","setSortDirection","setCurrentPage","pageSize","totalProducts","setTotalProducts","loadingPage","setLoadingPage","useEffect","query","URLSearchParams","search","get","async","loadGlobalFilters","fetchSearchResults","useCallback","attributeFilterGroups","Object","entries","filter","values","length","attributeCode","group","searchCriteria","sortField","filterGroups","data","items","total_count","err","isLoading","ceil","LoadingSpinner","ErrorMessage","message","Link","to","Fragment","Seo","title","description","ogTitle","ogUrl","window","origin","pathname","ProductFilter","filters","onFilterChange","newValues","prev","updated","htmlFor","id","value","onChange","e","target","includes","field","direction","split","toUpperCase","EmptyState","product","ProductCard","productsdata","isLCPCandidate","Pagination","newPage","scrollTo"],"mappings":"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"}