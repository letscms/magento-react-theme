{"version":3,"file":"Checkout-34R6lvxT.js","sources":["../../../src/api/checkout.js","../../../src/components/onePageCheckout/AddressSection.jsx","../../../src/components/onePageCheckout/ShippingSection.jsx","../../../src/components/onePageCheckout/PaymentSection.jsx","../../../src/components/onePageCheckout/ReviewSection.jsx","../../../src/components/onePageCheckout/ConfirmationSection.jsx","../../../src/components/onePageCheckout/OrderSummary.jsx","../../../src/components/onePageCheckout/OnePageCheckout.jsx","../../../src/pages/Checkout.jsx"],"sourcesContent":["import authService, { magentoApi } from './auth';\n\n/**\n * Helper to check guest cart requirements\n */\nconst validateGuestCart = (cartId) => {\n  if (!cartId) throw new Error('Cart ID is required for guest checkout');\n};\n\n/**\n * Get available shipping methods\n */\nexport const getShippingMethods = async (cartId = null) => {\n  try {\n    const isLoggedIn = authService.isAuthenticated();\n    if (!isLoggedIn) validateGuestCart(cartId);\n\n    const endpoint = isLoggedIn\n      ? '/carts/mine/shipping-methods'\n      : `/guest-carts/${cartId}/shipping-methods`;\n\n    const response = await magentoApi.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error fetching shipping methods:', error.response?.data || error.message);\n    throw new Error('Failed to fetch shipping methods');\n  }\n};\n\n/**\n * Get available payment methods\n */\nexport const getPaymentMethods = async (cartId = null) => {\n  try {\n    const isLoggedIn = authService.isAuthenticated();\n    if (!isLoggedIn) validateGuestCart(cartId);\n\n    const endpoint = isLoggedIn\n      ? '/carts/mine/payment-methods'\n      : `/guest-carts/${cartId}/payment-methods`;\n\n    const response = await magentoApi.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error fetching payment methods:', error.response?.data || error.message);\n    throw new Error('Failed to fetch payment methods');\n  }\n};\n\n/**\n * Set shipping information\n */\nexport const setShippingInformation = async (addressInfo, shippingMethod, cartId = null) => {\n  try {\n    const isLoggedIn = authService.isAuthenticated();\n    if (!isLoggedIn) validateGuestCart(cartId);\n\n    const shippingAddress = {\n      firstname: addressInfo.firstname,\n      lastname: addressInfo.lastname,\n      street: addressInfo.street,\n      city: addressInfo.city,\n      region: addressInfo.region,\n      postcode: addressInfo.postcode,\n      country_id: addressInfo.country_id,\n      telephone: addressInfo.telephone,\n      email: addressInfo.email,\n      ...(addressInfo.region_id && { region_id: parseInt(addressInfo.region_id, 10) })\n    };\n\n    const billingAddress = addressInfo.same_as_billing\n      ? { ...shippingAddress }\n      : {\n          firstname: addressInfo.billing_address.firstname,\n          lastname: addressInfo.billing_address.lastname,\n          street: addressInfo.billing_address.street,\n          city: addressInfo.billing_address.city,\n          region: addressInfo.billing_address.region,\n          postcode: addressInfo.billing_address.postcode,\n          country_id: addressInfo.billing_address.country_id,\n          telephone: addressInfo.billing_address.telephone,\n          email: addressInfo.billing_address.email,\n          ...(addressInfo.billing_address.region_id && {\n            region_id: parseInt(addressInfo.billing_address.region_id, 10)\n          })\n        };\n\n    const shippingInfo = {\n      addressInformation: {\n        shipping_address: shippingAddress,\n        billing_address: billingAddress,\n        shipping_method_code: shippingMethod.method_code,\n        shipping_carrier_code: shippingMethod.carrier_code\n      }\n    };\n\n    const endpoint = isLoggedIn\n      ? '/carts/mine/shipping-information'\n      : `/guest-carts/${cartId}/shipping-information`;\n\n    const response = await magentoApi.post(endpoint, shippingInfo);\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error setting shipping information:', error.response?.data || error.message);\n    throw new Error(error.response?.data?.message || 'Failed to set shipping information');\n  }\n};\n\n/**\n * Place order\n */\nexport const placeOrder = async (paymentInfo, cartId = null) => {\n  try {\n    const isLoggedIn = authService.isAuthenticated();\n    if (!isLoggedIn) validateGuestCart(cartId);\n\n    const payload = {\n      paymentMethod: {\n        method: paymentInfo.method,\n        ...(paymentInfo.additional_data && { additional_data: paymentInfo.additional_data })\n      }\n    };\n\n    if (isLoggedIn) {\n      try {\n        const response = await magentoApi.post('/carts/mine/payment-information', payload);\n        return response.data;\n      } catch (err) {\n        const fallback = await magentoApi.post('/carts/mine/order', payload);\n        return fallback.data;\n      }\n    } else {\n      return await placeGuestOrder(cartId, paymentInfo);\n    }\n  } catch (error) {\n    console.error('❌ Error placing order:', error.response?.data || error.message);\n    throw new Error(error.response?.data?.message || 'Failed to place order. Please try again.');\n  }\n};\n\n/**\n * Place guest order\n */\nexport const placeGuestOrder = async (cartId, paymentInfo) => {\n  try {\n    validateGuestCart(cartId);\n    if (!paymentInfo?.method) throw new Error('Payment method is required');\n    if (!paymentInfo.email) throw new Error('Email is required for guest checkout');\n\n    const payload = {\n      paymentMethod: {\n        method: paymentInfo.method,\n        ...(paymentInfo.additional_data && { additional_data: paymentInfo.additional_data })\n      },\n      email: paymentInfo.email\n    };\n\n    const response = await magentoApi.put(`/guest-carts/${cartId}/order`, payload, {\n      headers: { 'Content-Type': 'application/json', Accept: 'application/json' }\n    });\n\n    return response.data;\n  } catch (error) {\n    console.error('❌ Guest order failed:', error.response?.data || error.message);\n    let errorMessage = 'Failed to place order';\n\n    if (error.response) {\n      if (error.response.status === 404) {\n        errorMessage = 'Cart not found or expired.';\n      } else if (error.response.data?.message) {\n        errorMessage = error.response.data.message;\n      }\n    }\n    throw new Error(errorMessage);\n  }\n};\n\n/**\n * Get countries\n */\nexport const getCountries = async () => {\n  try {\n    const response = await magentoApi.get('/directory/countries');\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error fetching countries:', error.response?.data || error.message);\n    throw new Error('Failed to fetch countries list');\n  }\n};\n\n/**\n * Estimate shipping methods\n */\nexport const estimateShippingMethods = async (address, cartId = null) => {\n  try {\n    const isLoggedIn = authService.isAuthenticated();\n    if (!isLoggedIn) validateGuestCart(cartId);\n\n    const cleanAddress = {\n      country_id: address.country_id,\n      postcode: address.postcode,\n      region: address.region,\n      ...(address.region_id && { region_id: parseInt(address.region_id, 10) }),\n      ...(address.city && { city: address.city })\n    };\n\n    const endpoint = isLoggedIn\n      ? '/carts/mine/estimate-shipping-methods'\n      : `/guest-carts/${cartId}/estimate-shipping-methods`;\n\n    const response = await magentoApi.post(endpoint, { address: cleanAddress });\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error estimating shipping methods:', error.response?.data || error.message);\n    throw new Error(error.response?.data?.message || 'Failed to estimate shipping methods');\n  }\n};\n\n/**\n * Get cart totals\n */\nexport const getCartTotals = async (cartId = null) => {\n  try {\n    const isLoggedIn = authService.isAuthenticated();\n    if (!isLoggedIn) validateGuestCart(cartId);\n\n    const endpoint = isLoggedIn ? '/carts/mine/totals' : `/guest-carts/${cartId}/totals`;\n    const response = await magentoApi.get(endpoint);\n    return response.data;\n  } catch (error) {\n    console.error('❌ Error fetching cart totals:', error.response?.data || error.message);\n    throw new Error('Failed to fetch cart totals');\n  }\n};\n\nexport default {\n  getShippingMethods,\n  getPaymentMethods,\n  setShippingInformation,\n  placeOrder,\n  placeGuestOrder,\n  getCountries,\n  estimateShippingMethods,\n  getCartTotals\n};\n","import React, { useEffect, useState, useCallback, memo } from \"react\";\nimport { fetchRegionsByCountry } from \"../../api/addressApi\";\nimport { useAddress } from \"../../context/AddressContext\"; // Assuming this context provides `addresses` and `fetchAddresses`\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst AddressSectionInternal = ({\n  shippingAddress,\n  billingAddress,\n  handleShippingAddressChange,\n  handleBillingAddressChange,\n  toggleSameAsBilling,\n  countries,\n  sectionCompleted,\n  sectionExpanded,\n  toggleSection,\n  saveShippingAddress,\n  sectionLoading, // This prop was in the original, ensure it's passed from OnePageCheckout\n}) => {\n  const [regionsShipping, setRegionsShipping] = useState([]);\n  const [regionsBilling, setRegionsBilling] = useState([]);\n  const { currentUser, isAuthenticated } = useAuth();\n  const { addresses, fetchAddresses } = useAddress(); // From context\n  const [selectedSavedAddressId, setSelectedSavedAddressId] = useState(\"\");\n  const [showNewAddressForm, setShowNewAddressForm] = useState(false); // Default to false, logic below will adjust\n\n  useEffect(() => {\n    if (isAuthenticated()) {\n      fetchAddresses(); // Fetch addresses if user is authenticated\n    }\n  }, [isAuthenticated, fetchAddresses]);\n\n  // Effect to decide whether to show the new address form based on fetched addresses\n  useEffect(() => {\n    if (isAuthenticated()) {\n      if (addresses && addresses.length > 0) {\n        setShowNewAddressForm(false); // Hide form if addresses exist\n        // Check if a default shipping address exists and pre-select it\n        const defaultShipping = addresses.find(addr => addr.default_shipping);\n        if (defaultShipping) {\n          setSelectedSavedAddressId(defaultShipping.id.toString());\n          // Populate form with default shipping address\n          // The parent `handleShippingAddressChange` should handle full object update\n          handleShippingAddressChange(formatAddressForForm(defaultShipping), null, true);\n          if (defaultShipping.country_id) {\n            handleCountryChange(defaultShipping.country_id, \"shipping\");\n          }\n        } else {\n            // If no default, but addresses exist, still hide form, user can pick or add new\n            setSelectedSavedAddressId(\"\"); // No specific address selected initially\n        }\n      } else {\n        setShowNewAddressForm(true); // Show form if no addresses exist\n        setSelectedSavedAddressId(\"new\"); // Indicate new address mode\n      }\n    } else {\n      setShowNewAddressForm(true); // Always show form for guests\n      setSelectedSavedAddressId(\"new\");\n    }\n  }, [isAuthenticated, addresses, handleShippingAddressChange]); // Added handleShippingAddressChange to deps for pre-fill\n\n  const formatAddressForForm = useCallback(\n    (address) => {\n      if (!address) return {}; // Return empty object for new/empty address\n      return {\n        firstname: address.firstname || \"\",\n        lastname: address.lastname || \"\",\n        street: Array.isArray(address.street)\n          ? [address.street[0] || \"\", address.street[1] || \"\"]\n          : [(address.street || \"\"), \"\"], // Handle if street is single string or not array\n        city: address.city || \"\",\n        postcode: address.postcode || \"\",\n        country_id: address.country_id || \"\",\n        telephone: address.telephone || \"\",\n        email: address.email || currentUser?.email || \"\",\n        region: address.region?.region || (typeof address.region === 'string' ? address.region : \"\") || \"\",\n        region_id: address.region?.region_id || address.region_id || \"\",\n        // save_in_address_book is part of shippingAddress state in parent, not directly formatted here\n      };\n    },\n    [currentUser]\n  );\n\n  const handleCountryChange = useCallback(async (countryId, type) => {\n    if (!countryId) {\n      if (type === \"shipping\") setRegionsShipping([]);\n      if (type === \"billing\") setRegionsBilling([]);\n      return;\n    }\n    try {\n      const regions = await fetchRegionsByCountry(countryId);\n      if (type === \"shipping\") setRegionsShipping(regions || []);\n      if (type === \"billing\") setRegionsBilling(regions || []);\n    } catch (error) {\n      console.error(`Failed to fetch regions for ${type}:`, error);\n      if (type === \"shipping\") setRegionsShipping([]);\n      if (type === \"billing\") setRegionsBilling([]);\n    }\n  }, []);\n\n  const handleSavedAddressSelection = useCallback(\n    async (addressId) => {\n      setSelectedSavedAddressId(addressId);\n      setShowNewAddressForm(addressId === \"new\");\n\n      if (addressId === \"new\") {\n        const emptyAddress = formatAddressForForm({ email: currentUser?.email }); // Pre-fill email for new\n        handleShippingAddressChange(emptyAddress, null, true); // true for full object update\n        setRegionsShipping([]);\n        if (shippingAddress.same_as_billing) {\n          handleBillingAddressChange(emptyAddress, null, true);\n          setRegionsBilling([]);\n        }\n      } else {\n        const selectedAddress = addresses.find((addr) => addr.id.toString() === addressId);\n        if (selectedAddress) {\n          const formattedAddress = formatAddressForForm(selectedAddress);\n          handleShippingAddressChange(formattedAddress, null, true);\n          if (formattedAddress.country_id) {\n            await handleCountryChange(formattedAddress.country_id, \"shipping\");\n          }\n          if (shippingAddress.same_as_billing) {\n            handleBillingAddressChange(formattedAddress, null, true);\n            if (formattedAddress.country_id) {\n              await handleCountryChange(formattedAddress.country_id, \"billing\");\n            }\n          }\n        }\n      }\n    },\n    [\n      addresses,\n      formatAddressForForm,\n      handleShippingAddressChange,\n      handleBillingAddressChange,\n      handleCountryChange,\n      shippingAddress.same_as_billing,\n      currentUser?.email,\n    ]\n  );\n  \n  // Simplified: just call handleSavedAddressSelection with \"new\"\n  const handleAddNewAddressClick = useCallback(() => {\n    handleSavedAddressSelection(\"new\");\n  }, [handleSavedAddressSelection]);\n\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md mb-6 overflow-hidden\">\n      <div\n        className={`p-4 border-b cursor-pointer flex justify-between items-center ${\n          sectionCompleted.address ? \"bg-green-50\" : \"\"\n        }`}\n        onClick={() => toggleSection(\"address\")}\n      >\n        <h2 className=\"text-lg font-semibold\">\n          {sectionCompleted.address ? (\n            <span className=\"text-green-600\">✓ </span>\n          ) : (\n            <span className=\"text-gray-400\">1. </span>\n          )}\n          Shipping Address\n        </h2>\n        <svg\n          className={`h-5 w-5 transform ${\n            sectionExpanded.address ? \"rotate-180\" : \"\"\n          }`}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n\n      {sectionExpanded.address && (\n        <div className=\"p-6\">\n          {isAuthenticated() && addresses.length > 0 && (\n            <div className=\"mb-6\">\n              <label htmlFor=\"saved_address_select\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                Select a Saved Address or Add New\n              </label>\n              <select\n                id=\"saved_address_select\"\n                value={selectedSavedAddressId}\n                onChange={(e) => handleSavedAddressSelection(e.target.value)}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              >\n                <option value=\"\">--- Select Address ---</option>\n                {addresses.map((addr) => (\n                  <option key={addr.id} value={addr.id.toString()}>\n                    {`${addr.firstname} ${addr.lastname}, ${addr.street.join(\", \")}, ${addr.city}, ${addr.region?.region || addr.region || ''} ${addr.postcode}, ${addr.country_id}`}\n                  </option>\n                ))}\n                <option value=\"new\">-- Add New Address --</option>\n              </select>\n            </div>\n          )}\n\n          {(showNewAddressForm || !isAuthenticated() || (isAuthenticated() && addresses.length === 0 && selectedSavedAddressId === \"new\") ) && (\n            <>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"firstname\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    First Name <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"firstname\"\n                    name=\"firstname\"\n                    value={shippingAddress.firstname}\n                    onChange={(e) => handleShippingAddressChange(\"firstname\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"lastname\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Last Name <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"lastname\"\n                    name=\"lastname\"\n                    value={shippingAddress.lastname}\n                    onChange={(e) => handleShippingAddressChange(\"lastname\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n\n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"street1\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Street Address <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"street1\"\n                    name=\"street[0]\"\n                    value={shippingAddress.street[0]}\n                    onChange={(e) => handleShippingAddressChange(\"street\", [e.target.value, shippingAddress.street[1]])}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    placeholder=\"Street address, P.O. box, company name\"\n                    required\n                  />\n                </div>\n\n                <div className=\"md:col-span-2\">\n                  <input\n                    type=\"text\"\n                    id=\"street2\"\n                    name=\"street[1]\"\n                    value={shippingAddress.street[1]}\n                    onChange={(e) => handleShippingAddressChange(\"street\", [shippingAddress.street[0], e.target.value])}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 mt-2\"\n                    placeholder=\"Apartment, suite, unit, building, floor, etc.\"\n                  />\n                </div>\n                \n                <div>\n                  <label htmlFor=\"country_id_shipping\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Country <span className=\"text-red-500\">*</span>\n                  </label>\n                  <select\n                    id=\"country_id_shipping\"\n                    name=\"country_id\"\n                    value={shippingAddress.country_id}\n                    onChange={(e) => {\n                      handleShippingAddressChange(\"country_id\", e.target.value);\n                      handleCountryChange(e.target.value, \"shipping\");\n                    }}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  >\n                    <option value=\"\">Select Country</option>\n                    {countries.map((country) => (\n                      <option key={country.id} value={country.id}>\n                        {country.full_name_english}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div>\n                  <label htmlFor=\"region_shipping\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    State/Province/Region <span className=\"text-red-500\">*</span>\n                  </label>\n                  {regionsShipping.length === 0 ? (\n                    <input\n                      id=\"region_shipping_text\"\n                      type=\"text\"\n                      name=\"region\"\n                      value={shippingAddress.region}\n                      onChange={(e) => {\n                        handleShippingAddressChange(\"region\", e.target.value);\n                        handleShippingAddressChange(\"region_id\", \"\"); // Clear region_id if text is used\n                      }}\n                      placeholder=\"Enter State/Province/Region\"\n                      required={!shippingAddress.country_id || (shippingAddress.country_id && regionsShipping.length === 0)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  ) : (\n                    <select\n                      id=\"region_id_shipping_select\"\n                      name=\"region_id\"\n                      value={shippingAddress.region_id}\n                      onChange={(e) => {\n                        const selectedRegionId = e.target.value;\n                        const selectedRegion = regionsShipping.find((r) => Number(r.id) === Number(selectedRegionId));\n                        handleShippingAddressChange(\"region_id\", selectedRegionId);\n                        handleShippingAddressChange(\"region\", selectedRegion?.name || \"\");\n                      }}\n                      required\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    >\n                      <option value=\"\">Select State</option>\n                      {regionsShipping.map((region) => (\n                        <option key={region.id} value={region.id}>\n                          {region.name}\n                        </option>\n                      ))}\n                    </select>\n                  )}\n                </div>\n\n                <div>\n                  <label htmlFor=\"city\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    City <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"city\"\n                    name=\"city\"\n                    value={shippingAddress.city}\n                    onChange={(e) => handleShippingAddressChange(\"city\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"postcode\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Zip/Postal Code <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\" // Changed to text for broader compatibility\n                    id=\"postcode\"\n                    name=\"postcode\"\n                    value={shippingAddress.postcode}\n                    onChange={(e) => handleShippingAddressChange(\"postcode\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"telephone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone Number <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"tel\"\n                    id=\"telephone\"\n                    name=\"telephone\"\n                    value={shippingAddress.telephone}\n                    onChange={(e) => handleShippingAddressChange(\"telephone\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"email_shipping\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email Address <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"email_shipping\"\n                    name=\"email\"\n                    value={shippingAddress.email}\n                    onChange={(e) => handleShippingAddressChange(\"email\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                    readOnly={isAuthenticated() && currentUser?.email === shippingAddress.email} // Make email read-only if logged in and it's their main email\n                  />\n                </div>\n              </div>\n              {isAuthenticated() && (\n                <div className=\"mt-4\">\n                  <label className=\"inline-flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"save_in_address_book\"\n                      checked={shippingAddress.save_in_address_book !== false} // Default to true\n                      onChange={(e) => handleShippingAddressChange(\"save_in_address_book\", e.target.checked)}\n                      className=\"rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\n                    />\n                    <span className=\"ml-2 text-sm text-gray-700\">Save in address book</span>\n                  </label>\n                </div>\n              )}\n            </>\n          )}\n\n          <div className=\"mt-6\">\n            <label className=\"inline-flex items-center\">\n              <input\n                type=\"checkbox\"\n                name=\"same_as_billing\"\n                checked={shippingAddress.same_as_billing}\n                onChange={toggleSameAsBilling}\n                className=\"rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50\"\n              />\n              <span className=\"ml-2 text-sm text-gray-700\">Billing address same as shipping address</span>\n            </label>\n          </div>\n\n          {!shippingAddress.same_as_billing && (\n            <div className=\"mt-6\">\n              <h3 className=\"text-lg font-medium mb-4\">Billing Address</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                  <label htmlFor=\"billing_firstname\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    First Name <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"billing_firstname\"\n                    name=\"billing_firstname\"\n                    value={billingAddress.firstname}\n                    onChange={(e) => handleBillingAddressChange(\"firstname\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"billing_lastname\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Last Name <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"billing_lastname\"\n                    name=\"billing_lastname\"\n                    value={billingAddress.lastname}\n                    onChange={(e) => handleBillingAddressChange(\"lastname\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n                <div className=\"md:col-span-2\">\n                  <label htmlFor=\"billing_street1\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Street Address <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"billing_street1\"\n                    name=\"billing_street[0]\"\n                    value={billingAddress.street[0]}\n                    onChange={(e) => handleBillingAddressChange(\"street\", [e.target.value, billingAddress.street[1]])}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n                <div className=\"md:col-span-2\">\n                  <input\n                    type=\"text\"\n                    id=\"billing_street2\"\n                    name=\"billing_street[1]\"\n                    value={billingAddress.street[1]}\n                    onChange={(e) => handleBillingAddressChange(\"street\", [billingAddress.street[0], e.target.value])}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 mt-2\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"billing_country_id\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Country <span className=\"text-red-500\">*</span>\n                  </label>\n                  <select\n                    id=\"billing_country_id\"\n                    name=\"billing_country_id\"\n                    value={billingAddress.country_id}\n                    onChange={(e) => {\n                      handleBillingAddressChange(\"country_id\", e.target.value);\n                      handleCountryChange(e.target.value, \"billing\");\n                    }}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  >\n                    <option value=\"\">Select Country</option>\n                    {countries.map((country) => (\n                      <option key={country.id} value={country.id}>\n                        {country.full_name_english}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div>\n                  <label htmlFor=\"billing_region\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    State/Province/Region <span className=\"text-red-500\">*</span>\n                  </label>\n                  {regionsBilling.length === 0 ? (\n                    <input\n                      id=\"billing_region_text\"\n                      type=\"text\"\n                      name=\"billing_region\"\n                      value={billingAddress.region}\n                      onChange={(e) => {\n                        handleBillingAddressChange(\"region\", e.target.value);\n                        handleBillingAddressChange(\"region_id\", \"\");\n                      }}\n                      placeholder=\"Enter State/Province/Region\"\n                      required={!billingAddress.country_id || (billingAddress.country_id && regionsBilling.length === 0)}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  ) : (\n                    <select\n                      id=\"billing_region_id_select\"\n                      name=\"billing_region_id\"\n                      value={billingAddress.region_id}\n                      onChange={(e) => {\n                        const selectedRegionId = e.target.value;\n                        const selectedRegion = regionsBilling.find((r) => Number(r.id) === Number(selectedRegionId));\n                        handleBillingAddressChange(\"region_id\", selectedRegionId);\n                        handleBillingAddressChange(\"region\", selectedRegion?.name || \"\");\n                      }}\n                      required\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    >\n                      <option value=\"\">Select State</option>\n                      {regionsBilling.map((region) => (\n                        <option key={region.id} value={region.id}>\n                          {region.name}\n                        </option>\n                      ))}\n                    </select>\n                  )}\n                </div>\n                <div>\n                  <label htmlFor=\"billing_city\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    City <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"billing_city\"\n                    name=\"billing_city\"\n                    value={billingAddress.city}\n                    onChange={(e) => handleBillingAddressChange(\"city\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"billing_postcode\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Zip/Postal Code <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    id=\"billing_postcode\"\n                    name=\"billing_postcode\"\n                    value={billingAddress.postcode}\n                    onChange={(e) => handleBillingAddressChange(\"postcode\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"billing_telephone\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Phone Number <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"tel\"\n                    id=\"billing_telephone\"\n                    name=\"billing_telephone\"\n                    value={billingAddress.telephone}\n                    onChange={(e) => handleBillingAddressChange(\"telephone\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                  />\n                </div>\n                 {/* Email for billing is usually not collected separately if \"same as billing\" is an option,\n                 or if the primary email is already captured. Included for completeness if needed. */}\n                <div>\n                  <label htmlFor=\"billing_email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Email Address <span className=\"text-red-500\">*</span>\n                  </label>\n                  <input\n                    type=\"email\"\n                    id=\"billing_email\"\n                    name=\"billing_email\"\n                    value={billingAddress.email}\n                    onChange={(e) => handleBillingAddressChange(\"email\", e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n                    required\n                    readOnly={isAuthenticated() && currentUser?.email === billingAddress.email && shippingAddress.same_as_billing}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"mt-8 flex justify-end\">\n            <button\n              type=\"button\"\n              onClick={saveShippingAddress}\n              disabled={sectionLoading}\n              className=\"bg-blue-600 text-white py-2 px-6 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:opacity-50\"\n            >\n              {sectionLoading ? \"Saving...\" : \"Continue to Shipping\"}\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst AddressSection = memo(AddressSectionInternal);\n\nexport default AddressSection;\n","import React, { memo } from 'react';\nimport { formatPrice } from '../../utils/formatters';\nimport LoadingSpinner from '../../utils/Loader'; // Assuming this is the correct path\n\nconst ShippingSectionInternal = ({\n  shippingMethods,\n  selectedShippingMethod,\n  setSelectedShippingMethod,\n  sectionCompleted,\n  sectionExpanded,\n  toggleSection,\n  saveShippingMethod,\n  sectionLoading // This prop was in the original, ensure it's passed from OnePageCheckout\n}) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-md mb-6 overflow-hidden\">\n      <div \n        className={`p-4 border-b cursor-pointer flex justify-between items-center ${sectionCompleted.shipping ? 'bg-green-50' : ''} ${!sectionCompleted.address ? 'opacity-50 cursor-not-allowed' : ''}`}\n        onClick={() => sectionCompleted.address && toggleSection('shipping')} // Only allow toggle if address is complete\n      >\n        <h2 className=\"text-lg font-semibold\">\n          {sectionCompleted.shipping ? (\n            <span className=\"text-green-600\">✓ </span>\n          ) : (\n            <span className=\"text-gray-400\">2. </span>\n          )}\n          Shipping Method\n        </h2>\n        <svg \n          className={`h-5 w-5 transform ${sectionExpanded.shipping ? 'rotate-180' : ''}`} \n          xmlns=\"http://www.w3.org/2000/svg\" \n          viewBox=\"0 0 20 20\" \n          fill=\"currentColor\"\n        >\n          <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n      </div>\n      \n      {sectionExpanded.shipping && sectionCompleted.address && ( // Only expand if address is complete\n        <div className=\"p-6\">\n          {sectionLoading ? ( // Use the specific sectionLoading prop\n            <div className=\"flex justify-center py-8\">\n              <LoadingSpinner />\n            </div>\n          ) : (\n            <>\n              {!shippingMethods || shippingMethods.length === 0 ? (\n                <p className=\"text-gray-500 italic\">\n                  No shipping methods available for your address, or address not yet provided.\n                </p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {shippingMethods.map(method => (\n                    <div key={`${method.carrier_code}_${method.method_code}`} className=\"flex items-center p-3 border rounded-md hover:bg-gray-50 transition-colors\">\n                      <input\n                        type=\"radio\"\n                        id={`${method.carrier_code}_${method.method_code}`}\n                        name=\"shipping_method\"\n                        checked={selectedShippingMethod && \n                          selectedShippingMethod.carrier_code === method.carrier_code && \n                          selectedShippingMethod.method_code === method.method_code}\n                        onChange={() => setSelectedShippingMethod(method)}\n                        className=\"h-4 w-4 text-blue-600 border-gray-300 focus:ring-blue-500 cursor-pointer\"\n                      />\n                      <label htmlFor={`${method.carrier_code}_${method.method_code}`} className=\"ml-3 flex flex-1 justify-between cursor-pointer\">\n                        <div>\n                          <span className=\"block text-sm font-medium text-gray-700\">{method.carrier_title}</span>\n                          <span className=\"block text-sm text-gray-500\">{method.method_title}</span>\n                        </div>\n                        <span className=\"text-sm font-medium text-gray-900\">\n                          {method.amount ? formatPrice(method.amount) : (method.price_incl_tax ? formatPrice(method.price_incl_tax) : 'N/A')}\n                        </span>\n                      </label>\n                    </div>\n                  ))}\n                </div>\n              )}\n              \n              {shippingMethods && shippingMethods.length > 0 && (\n                <div className=\"mt-6\">\n                  <button\n                    type=\"button\"\n                    onClick={saveShippingMethod}\n                    disabled={sectionLoading || !selectedShippingMethod}\n                    className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\"\n                  >\n                    {sectionLoading ? 'Processing...' : 'Continue to Payment'}\n                  </button>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ShippingSection = memo(ShippingSectionInternal);\n\nexport default ShippingSection;","import React, { memo } from 'react';\nimport LoadingSpinner from '../../utils/Loader'; // Assuming this is the correct path\n\nconst PaymentSectionInternal = ({\n  paymentMethods,\n  selectedPaymentMethod,\n  setSelectedPaymentMethod,\n  sectionCompleted,\n  sectionExpanded,\n  toggleSection,\n  savePaymentMethod,\n  sectionLoading // This prop was in the original, ensure it's passed from OnePageCheckout\n}) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-md mb-6 overflow-hidden\">\n      <div \n        className={`p-4 border-b cursor-pointer flex justify-between items-center ${sectionCompleted.payment ? 'bg-green-50' : ''} ${!sectionCompleted.shipping ? 'opacity-50 cursor-not-allowed' : ''}`}\n        onClick={() => sectionCompleted.shipping && toggleSection('payment')} // Only allow toggle if shipping is complete\n      >\n        <h2 className=\"text-lg font-semibold\">\n          {sectionCompleted.payment ? (\n            <span className=\"text-green-600\">✓ </span>\n          ) : (\n            <span className=\"text-gray-400\">3. </span>\n          )}\n          Payment Method\n        </h2>\n        <svg \n          className={`h-5 w-5 transform ${sectionExpanded.payment ? 'rotate-180' : ''}`} \n          xmlns=\"http://www.w3.org/2000/svg\" \n          viewBox=\"0 0 20 20\" \n          fill=\"currentColor\"\n        >\n          <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n        </svg>\n      </div>\n      \n      {sectionExpanded.payment && sectionCompleted.shipping && ( // Only expand if shipping is complete\n        <div className=\"p-6\">\n          {sectionLoading ? ( // Use the specific sectionLoading prop\n            <div className=\"flex justify-center py-8\">\n              <LoadingSpinner />\n            </div>\n          ) : (\n            <>\n              {!paymentMethods || paymentMethods.length === 0 ? (\n                <p className=\"text-gray-500 italic\">\n                  No payment methods available. Please ensure shipping is completed.\n                </p>\n              ) : (\n                <div className=\"space-y-4\">\n                  {paymentMethods.map(method => (\n                    <div key={method.code} className=\"border rounded-md p-4 hover:border-blue-500 transition-colors cursor-pointer\" onClick={() => setSelectedPaymentMethod(method)}>\n                      <div className=\"flex items-center\">\n                        <input\n                          type=\"radio\"\n                          id={method.code}\n                          name=\"payment_method\"\n                          checked={selectedPaymentMethod && selectedPaymentMethod.code === method.code}\n                          onChange={() => setSelectedPaymentMethod(method)} // Already handled by div click, but good for accessibility\n                          className=\"h-4 w-4 text-blue-600 border-gray-300 focus:ring-blue-500 cursor-pointer\"\n                        />\n                        <label htmlFor={method.code} className=\"ml-3 flex flex-1 cursor-pointer\">\n                          <div>\n                            <span className=\"block text-sm font-medium text-gray-700\">{method.title}</span>\n                            {/* Placeholder for method-specific descriptions or components */}\n                            {method.code === 'checkmo' && (\n                                <span className=\"block text-xs text-gray-500 mt-1\">Pay by Check or Money Order.</span>\n                            )}\n                             {method.code === 'cashondelivery' && (\n                                <span className=\"block text-xs text-gray-500 mt-1\">Pay on delivery.</span>\n                            )}\n                          </div>\n                        </label>\n                      </div>\n                      \n                      {/* Placeholder for Braintree or other integrated payment forms */}\n                      {selectedPaymentMethod && selectedPaymentMethod.code === method.code && method.code === 'braintree_cc_vault' && (\n                        <div className=\"mt-4 ml-7 text-sm text-gray-600\">\n                           {/* This is where Braintree's Drop-in UI or Hosted Fields would be rendered. */}\n                           {/* For now, a placeholder: */}\n                           <p className=\"italic\">Braintree credit card form would appear here.</p>\n                           {/* Example fields (not functional without integration) */}\n                           <div className=\"mt-2 space-y-2\">\n                               <div>\n                                   <label htmlFor=\"braintree_card_number\" className=\"text-xs\">Card Number</label>\n                                   <input type=\"text\" id=\"braintree_card_number\" className=\"w-full p-1 border rounded-sm text-xs\" placeholder=\"•••• •••• •••• ••••\" />\n                               </div>\n                               <div>\n                                   <label htmlFor=\"braintree_expiry\" className=\"text-xs\">Expiry</label>\n                                   <input type=\"text\" id=\"braintree_expiry\" className=\"w-full p-1 border rounded-sm text-xs\" placeholder=\"MM/YY\" />\n                               </div>\n                               <div>\n                                   <label htmlFor=\"braintree_cvv\" className=\"text-xs\">CVV</label>\n                                   <input type=\"text\" id=\"braintree_cvv\" className=\"w-full p-1 border rounded-sm text-xs\" placeholder=\"•••\" />\n                               </div>\n                           </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              )}\n              \n              {paymentMethods && paymentMethods.length > 0 && (\n                <div className=\"mt-6\">\n                  <button\n                    type=\"button\"\n                    onClick={savePaymentMethod}\n                    disabled={sectionLoading || !selectedPaymentMethod}\n                    className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50\"\n                  >\n                    {sectionLoading ? 'Processing...' : 'Continue to Review Order'}\n                  </button>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst PaymentSection = memo(PaymentSectionInternal);\n\nexport default PaymentSection;","import React, { useState, memo, useCallback } from \"react\"; // Added memo and useCallback\nimport { formatPrice } from \"../../utils/formatters\";\nimport LoadingSpinner from \"../../utils/Loader\"; // Assuming this is the correct path\nimport { applyCoupon, removeCoupon } from \"../../api/cart\";\n\nconst ReviewSectionInternal = ({\n  shippingAddress,\n  billingAddress,\n  selectedShippingMethod,\n  selectedPaymentMethod,\n  cartItems,\n  orderSummary,\n  sectionCompleted,\n  sectionExpanded,\n  toggleSection,\n  placeOrder,\n  sectionLoading, // This prop was in the original, ensure it's passed from OnePageCheckout\n  onCouponApplied,\n  onCouponRemoved, // Added for consistency if needed, or can use onCouponApplied for both\n}) => {\n  const [couponCode, setCouponCode] = useState(\"\");\n  const [applyingCoupon, setApplyingCoupon] = useState(false);\n  const [couponError, setCouponError] = useState(\"\");\n  const [couponSuccess, setCouponSuccess] = useState(\"\");\n\n  const formatAddressDisplay = useCallback((address) => { // Renamed to avoid conflict if formatAddress is imported\n    if (!address) return \"No address provided\";\n    const parts = [\n      `${address.firstname} ${address.lastname}`,\n      address.street.filter(Boolean).join(\", \"), // Join street lines if both exist\n      `${address.city}, ${address.region || \"\"} ${address.postcode}`.replace(\" ,\", \",\").trim(), // Clean up spacing\n      address.country_id,\n      address.telephone ? `Tel: ${address.telephone}` : null,\n    ].filter(Boolean);\n    return parts.join(\"; \"); // Use a different separator for clarity\n  }, []);\n\n  const handleApplyCoupon = useCallback(async () => {\n    if (!couponCode.trim()) return;\n    setApplyingCoupon(true);\n    setCouponError(\"\");\n    setCouponSuccess(\"\");\n    try {\n      const result = await applyCoupon(couponCode);\n      if (result.success) {\n        setCouponSuccess(\"Coupon applied successfully!\");\n        setTimeout(() => setCouponSuccess(\"\"), 3000);\n        setCouponCode(\"\");\n        if (onCouponApplied) await onCouponApplied();\n      } else {\n        setCouponError(result.message || \"Failed to apply coupon.\");\n      }\n    } catch (err) {\n      console.error(\"Failed to apply coupon:\", err);\n      setCouponError(err.response?.data?.message || \"The coupon code isn't valid. Verify the code and try again.\");\n    } finally {\n      setApplyingCoupon(false);\n    }\n  }, [couponCode, onCouponApplied]);\n\n  const handleRemoveCoupon = useCallback(async () => {\n    setApplyingCoupon(true);\n    setCouponError(\"\");\n    setCouponSuccess(\"\");\n    try {\n      const result = await removeCoupon();\n      if (result.success) {\n        setCouponSuccess(\"Coupon removed successfully!\");\n        setTimeout(() => setCouponSuccess(\"\"), 3000);\n        // Use onCouponRemoved if distinct logic needed, else onCouponApplied can refresh totals\n        if (onCouponRemoved) await onCouponRemoved();\n        else if (onCouponApplied) await onCouponApplied();\n      } else {\n        setCouponError(result.message || \"Failed to remove coupon.\");\n      }\n    } catch (err) {\n      console.error(\"Failed to remove coupon:\", err);\n      setCouponError(err.response?.data?.message || \"Failed to remove coupon. Please try again.\");\n    } finally {\n      setApplyingCoupon(false);\n    }\n  }, [onCouponApplied, onCouponRemoved]);\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md mb-6 overflow-hidden\">\n      <div\n        className={`p-4 border-b cursor-pointer flex justify-between items-center ${sectionCompleted.review ? \"bg-green-50\" : \"\"} ${!sectionCompleted.payment ? 'opacity-50 cursor-not-allowed' : ''}`}\n        onClick={() => sectionCompleted.payment && toggleSection(\"review\")}\n      >\n        <h2 className=\"text-lg font-semibold\">\n          {sectionCompleted.review ? (\n            <span className=\"text-green-600\">✓ </span>\n          ) : (\n            <span className=\"text-gray-400\">4. </span>\n          )}\n          Review & Place Order\n        </h2>\n        <svg\n          className={`h-5 w-5 transform ${sectionExpanded.review ? \"rotate-180\" : \"\"}`}\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </div>\n\n      {sectionExpanded.review && sectionCompleted.payment && (\n        <div className=\"p-6\">\n          {sectionLoading ? (\n            <div className=\"flex justify-center py-8\">\n              <LoadingSpinner />\n            </div>\n          ) : (\n            <>\n              <div className=\"mb-6\">\n                <h3 className=\"text-md font-medium mb-2\">Shipping Information</h3>\n                <div className=\"bg-gray-50 p-4 rounded-md text-sm\">\n                  <p><strong>Address:</strong> {formatAddressDisplay(shippingAddress)}</p>\n                  <p><strong>Method:</strong> {selectedShippingMethod ? `${selectedShippingMethod.carrier_title} - ${selectedShippingMethod.method_title} (${formatPrice(selectedShippingMethod.amount || selectedShippingMethod.price_incl_tax || 0)})` : \"Not selected\"}</p>\n                </div>\n              </div>\n\n              <div className=\"mb-6\">\n                <h3 className=\"text-md font-medium mb-2\">Billing Information</h3>\n                <div className=\"bg-gray-50 p-4 rounded-md text-sm\">\n                  <p><strong>Address:</strong> {shippingAddress.same_as_billing ? \"Same as shipping\" : formatAddressDisplay(billingAddress)}</p>\n                  <p><strong>Payment Method:</strong> {selectedPaymentMethod ? selectedPaymentMethod.title : \"Not selected\"}</p>\n                </div>\n              </div>\n\n              <div className=\"mb-6\">\n                <h3 className=\"text-md font-medium mb-2\">Order Items</h3>\n                <div className=\"bg-gray-50 p-4 rounded-md\">\n                  <div className=\"divide-y divide-gray-200\">\n                    {cartItems && cartItems.map((item) => (\n                      <div key={item.item_id || item.sku} className=\"py-3 flex items-center\">\n                        <div className=\"w-16 h-16 flex-shrink-0 overflow-hidden rounded border border-gray-200\">\n                          {item.extension_attributes?.image_url ? (\n                            <img src={item.extension_attributes.image_url} alt={item.name} className=\"w-full h-full object-cover\" loading=\"lazy\"/>\n                          ) : (\n                            <div className=\"w-full h-full bg-gray-100 flex items-center justify-center\"><span className=\"text-xs text-gray-500\">No image</span></div>\n                          )}\n                        </div>\n                        <div className=\"ml-4 flex-1\">\n                          <h4 className=\"text-sm font-medium text-gray-900\">{item.name}</h4>\n                          <p className=\"text-sm text-gray-500\">SKU: {item.sku}</p>\n                          <p className=\"text-sm text-gray-500\">Qty: {item.qty}</p>\n                        </div>\n                        <div className=\"text-sm font-medium text-gray-900\">{formatPrice(item.price * item.qty)}</div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n\n              {orderSummary && (\n                <div className=\"mb-6\">\n                  <h3 className=\"text-md font-medium mb-2\">Order Summary</h3>\n                  <div className=\"bg-gray-50 p-4 rounded-md\">\n                    <div className=\"space-y-1 text-sm\">\n                      <div className=\"flex justify-between\"><span>Subtotal</span><span className=\"font-medium\">{formatPrice(orderSummary.subtotal_with_discount || orderSummary.subtotal || 0)}</span></div>\n                      {orderSummary.discount_amount !== 0 && (\n                        <div className=\"flex justify-between\"><span className=\"text-green-600\">Discount ({orderSummary.coupon_code || 'Auto'})</span><span className=\"font-medium text-green-600\">-{formatPrice(Math.abs(orderSummary.discount_amount))}</span></div>\n                      )}\n                      <div className=\"flex justify-between\"><span>Shipping ({selectedShippingMethod?.method_title || 'N/A'})</span><span className=\"font-medium\">{formatPrice(orderSummary.shipping_amount || 0)}</span></div>\n                      {orderSummary.tax_amount > 0 && (\n                        <div className=\"flex justify-between\"><span>Tax</span><span className=\"font-medium\">{formatPrice(orderSummary.tax_amount)}</span></div>\n                      )}\n                      <div className=\"border-t pt-2 mt-2\">\n                        <div className=\"flex justify-between text-base\"><span className=\"font-semibold\">Grand Total</span><span className=\"font-bold\">{formatPrice(orderSummary.grand_total || 0)}</span></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div className=\"mb-4\">\n                <h3 className=\"text-md font-medium mb-2\">Coupon Code</h3>\n                {orderSummary?.coupon_code ? (\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-green-700 font-semibold\">Applied: {orderSummary.coupon_code}</span>\n                    <button type=\"button\" onClick={handleRemoveCoupon} className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600 text-xs\" disabled={applyingCoupon}>\n                      {applyingCoupon ? \"Removing...\" : \"Remove\"}\n                    </button>\n                  </div>\n                ) : (\n                  <div>\n                    <div className=\"flex gap-2\">\n                      <input type=\"text\" value={couponCode} onChange={(e) => setCouponCode(e.target.value.toUpperCase())} placeholder=\"Enter coupon code\" className=\"flex-1 border rounded-md px-3 py-2 text-sm focus:ring focus:ring-blue-300\"/>\n                      <button type=\"button\" onClick={handleApplyCoupon} disabled={applyingCoupon || !couponCode.trim()} className=\"bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 disabled:opacity-50 text-sm\">\n                        {applyingCoupon ? \"Applying...\" : \"Apply\"}\n                      </button>\n                    </div>\n                    {couponSuccess && <p className=\"text-sm text-green-600 mt-2\">{couponSuccess}</p>}\n                    {couponError && <p className=\"text-sm text-red-600 mt-2\">{couponError}</p>}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"mb-6\">\n                <div className=\"bg-gray-50 p-4 rounded-md\">\n                  <p className=\"text-xs text-gray-600\">\n                    By placing your order, you agree to our{\" \"}\n                    <a href=\"/terms\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">Terms and Conditions</a> and{\" \"}\n                    <a href=\"/privacy\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">Privacy Policy</a>.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <button\n                  type=\"button\"\n                  onClick={placeOrder}\n                  disabled={sectionLoading || !selectedPaymentMethod || !selectedShippingMethod || cartItems.length === 0}\n                  className=\"w-full bg-green-600 text-white py-3 px-4 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 disabled:opacity-50 font-semibold\"\n                >\n                  {sectionLoading ? \"Processing Order...\" : \"Place Order\"}\n                </button>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ReviewSection = memo(ReviewSectionInternal);\n\nexport default ReviewSection;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst ConfirmationSection = ({ orderId }) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-md overflow-hidden\">\n      <div className=\"p-4 border-b bg-green-50\">\n        <h2 className=\"text-lg font-semibold text-green-600\">\n          <span className=\"text-green-600\">✓ </span>\n          Order Confirmation\n        </h2>\n      </div>\n      \n      <div className=\"p-6 text-center\">\n        <div className=\"mb-6\">\n          <div className=\"mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-green-100\">\n            <svg className=\"h-8 w-8 text-green-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n            </svg>\n          </div>\n        </div>\n        \n        <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Thank You for Your Order!</h2>\n        \n        <p className=\"text-gray-600 mb-6\">\n          Your order has been placed successfully. We've sent a confirmation email with all the details.\n        </p>\n        \n        {orderId && (\n          <div className=\"mb-6\">\n            <p className=\"text-gray-700\">\n              Your order number is: <span className=\"font-semibold\">{orderId}</span>\n            </p>\n            <p className=\"text-sm text-gray-500 mt-1\">\n              Please keep this number for your reference.\n            </p>\n          </div>\n        )}\n        \n        <div className=\"mt-8 space-y-4\">\n          <p className=\"text-gray-600\">\n            You can track your order status in your account dashboard.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row justify-center gap-4\">\n            <Link\n              to=\"/account/orders\"\n              className=\"inline-flex items-center justify-center px-6 py-3 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              View Order\n            </Link>\n            \n            <Link\n              to=\"/\"\n              className=\"inline-flex items-center justify-center px-6 py-3 border border-gray-300 rounded-md shadow-sm text-base font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n            >\n              Continue Shopping\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfirmationSection;","import React, { memo } from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatPrice } from '../../utils/formatters';\n\nconst OrderSummaryInternal = ({ cartItems, orderSummary, selectedShippingMethod }) => {\n  // Ensure cartItems is an array to prevent errors if it's undefined or null\n  const itemsToDisplay = Array.isArray(cartItems) ? cartItems : [];\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-md p-6 sticky top-6\">\n      <h2 className=\"text-lg font-semibold mb-4\">Order Summary</h2>\n      \n      <div className=\"mb-4\">\n        <h3 className=\"text-sm font-medium text-gray-700 mb-2\">Items ({itemsToDisplay.length})</h3>\n        {itemsToDisplay.length > 0 ? (\n          <div className=\"space-y-3 max-h-60 overflow-y-auto pr-2\"> {/* Added pr-2 for scrollbar spacing */}\n            {itemsToDisplay.map(item => (\n              <div key={item.item_id || item.sku} className=\"flex items-center py-2\"> {/* Added item.sku as fallback key */}\n                <div className=\"w-12 h-12 flex-shrink-0 overflow-hidden rounded border border-gray-200\">\n                  {item.extension_attributes?.image_url ? (\n                    <img \n                      src={item.extension_attributes.image_url} \n                      alt={item.name} \n                      className=\"w-full h-full object-cover\"\n                      loading=\"lazy\"\n                    />\n                  ) : (\n                    <div className=\"w-full h-full bg-gray-100 flex items-center justify-center\">\n                      <span className=\"text-xs text-gray-500\">No image</span>\n                    </div>\n                  )}\n                </div>\n                <div className=\"ml-3 flex-1 min-w-0\"> {/* Added min-w-0 for better truncation */}\n                  <p className=\"text-sm font-medium text-gray-900 truncate\" title={item.name}>{item.name}</p>\n                  <p className=\"text-xs text-gray-500\">Qty: {item.qty}</p>\n                </div>\n                <div className=\"text-sm font-medium text-gray-900 ml-2\"> {/* Added ml-2 for spacing */}\n                  {formatPrice((item.price || 0) * (item.qty || 0))}\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-sm text-gray-500 italic\">Your cart is empty.</p>\n        )}\n      </div>\n      \n      {orderSummary && (\n        <div className=\"border-t pt-4 space-y-1 text-sm\">\n          <div className=\"flex justify-between\">\n            <span className=\"text-gray-600\">Subtotal</span>\n            <span className=\"font-medium\">{formatPrice(orderSummary.subtotal_with_discount || orderSummary.subtotal || 0)}</span>\n          </div>\n          \n          {orderSummary.discount_amount < 0 && ( // Check if discount_amount is negative\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Discount ({orderSummary.coupon_code || 'Auto'})</span>\n              <span className=\"font-medium text-green-600\">{formatPrice(orderSummary.discount_amount)}</span>\n            </div>\n          )}\n          \n          {/* Display shipping only if available in orderSummary */}\n          {typeof orderSummary.shipping_amount === 'number' && (\n             <div className=\"flex justify-between\">\n               <span className=\"text-gray-600\">Shipping {selectedShippingMethod ? `(${selectedShippingMethod.method_title || selectedShippingMethod.carrier_title})` : ''}</span>\n               <span className=\"font-medium\">{formatPrice(orderSummary.shipping_amount)}</span>\n             </div>\n          )}\n          \n          {orderSummary.tax_amount > 0 && (\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Tax</span>\n              <span className=\"font-medium\">{formatPrice(orderSummary.tax_amount)}</span>\n            </div>\n          )}\n          \n          <div className=\"flex justify-between border-t pt-2 mt-2\">\n            <span className=\"font-semibold text-base\">Grand Total</span>\n            <span className=\"font-bold text-lg\">{formatPrice(orderSummary.grand_total || 0)}</span>\n          </div>\n        </div>\n      )}\n      \n      <div className=\"mt-6\">\n        <Link to=\"/cart\" className=\"text-blue-600 hover:text-blue-800 text-sm flex items-center group\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4 mr-1 transition-transform group-hover:-translate-x-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fillRule=\"evenodd\" d=\"M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z\" clipRule=\"evenodd\" />\n          </svg>\n          Edit Cart\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nconst OrderSummary = memo(OrderSummaryInternal);\n\nexport default OrderSummary;","import React, { useState, useEffect, useCallback } from \"react\"; // Added useCallback\nimport { useNavigate } from \"react-router-dom\";\nimport { useCart } from \"../../hooks/useCart\";\nimport checkoutApi from \"../../api/checkout\";\nimport authService from \"../../api/auth\";\n\n// Import section components\nimport AddressSection from \"./AddressSection\";\nimport ShippingSection from \"./ShippingSection\";\nimport PaymentSection from \"./PaymentSection\";\nimport ReviewSection from \"./ReviewSection\";\nimport ConfirmationSection from \"./ConfirmationSection\";\nimport OrderSummary from \"./OrderSummary\";\nimport LoadingSpinner from \"../../utils/Loader\"; // Assuming this is the correct path\n\nconst OnePageCheckout = () => {\n  const navigate = useNavigate();\n  const { cart, cartItems, getCartItemCount, clearCart } = useCart();\n\n  // Loading states\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Section states\n  const [sectionExpanded, setSectionExpanded] = useState({\n    address: true,\n    shipping: false,\n    payment: false,\n    review: false,\n  });\n\n  const [sectionCompleted, setSectionCompleted] = useState({\n    address: false,\n    shipping: false,\n    payment: false,\n    review: false,\n  });\n\n  const [sectionLoading, setSectionLoading] = useState({\n    address: false,\n    shipping: false,\n    payment: false,\n    review: false,\n  });\n\n  // Checkout data states\n  const [shippingAddress, setShippingAddress] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    street: [\"\", \"\"],\n    city: \"\",\n    region: \"\",\n    region_id: \"\",\n    postcode: \"\",\n    country_id: \"US\", // Default or fetch from config\n    telephone: \"\",\n    email: \"\",\n    save_in_address_book: true, // Added for AddressSection\n    same_as_billing: true,\n  });\n\n  const [billingAddress, setBillingAddress] = useState({\n    firstname: \"\",\n    lastname: \"\",\n    street: [\"\", \"\"],\n    city: \"\",\n    region: \"\",\n    region_id: \"\",\n    postcode: \"\",\n    country_id: \"US\", // Default or fetch from config\n    telephone: \"\",\n    email: \"\",\n  });\n\n  const [shippingMethods, setShippingMethods] = useState([]);\n  const [selectedShippingMethod, setSelectedShippingMethod] = useState(null);\n  const [paymentMethods, setPaymentMethods] = useState([]);\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(null);\n  const [countries, setCountries] = useState([]);\n  const [orderSummary, setOrderSummary] = useState(null);\n  const [orderId, setOrderId] = useState(null);\n\n  const isGuest = !authService.isAuthenticated();\n  const guestCartId = isGuest\n    ? localStorage.getItem(\"magento_guest_cart_id\")\n    : null;\n\n  useEffect(() => {\n    const initCheckout = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        if (getCartItemCount() === 0 && !orderId) { // Don't redirect if order was just placed\n          navigate(\"/cart\");\n          return;\n        }\n        const countriesData = await checkoutApi.getCountries();\n        setCountries(countriesData);\n\n        if (authService.isAuthenticated()) {\n          const userInfo = authService.getUserInfo();\n          if (userInfo) {\n            const userDefaultShipping = userInfo.addresses?.find(addr => addr.default_shipping);\n            const userAddress = userDefaultShipping || (userInfo.addresses && userInfo.addresses.length > 0 ? userInfo.addresses[0] : null);\n\n            const baseAddress = {\n              firstname: userInfo.firstname || \"\",\n              lastname: userInfo.lastname || \"\",\n              email: userInfo.email || \"\",\n              telephone: userAddress?.telephone || \"\", // Prioritize address telephone\n              street: userAddress?.street || [\"\", \"\"],\n              city: userAddress?.city || \"\",\n              region: userAddress?.region?.region || (typeof userAddress?.region === 'string' ? userAddress.region : \"\") || \"\",\n              region_id: userAddress?.region?.region_id || userAddress?.region_id || \"\",\n              postcode: userAddress?.postcode || \"\",\n              country_id: userAddress?.country_id || \"US\",\n              same_as_billing: true,\n              save_in_address_book: true,\n            };\n            setShippingAddress(baseAddress);\n            setBillingAddress(baseAddress); // Initially same\n          }\n        }\n        if (isGuest && !guestCartId && !orderId) {\n          throw new Error(\"No guest cart ID found. Please add items to your cart first.\");\n        }\n        if (cartItems.length > 0) { // Only fetch totals if cart has items or order not yet placed\n            const totals = await checkoutApi.getCartTotals(guestCartId);\n            setOrderSummary(totals);\n        }\n\n      } catch (err) {\n        console.error(\"Error initializing checkout:\", err);\n        setError(err.message || \"Failed to initialize checkout. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    initCheckout();\n  }, [navigate, getCartItemCount, guestCartId, isGuest, orderId, cartItems.length]); // Added orderId and cartItems.length\n\n  const toggleSection = useCallback((section) => {\n    setSectionExpanded((prevExpanded) => {\n      const newExpandedState = { address: false, shipping: false, payment: false, review: false };\n      if (\n        (section === \"address\") ||\n        (section === \"shipping\" && sectionCompleted.address) ||\n        (section === \"payment\" && sectionCompleted.shipping) ||\n        (section === \"review\" && sectionCompleted.payment)\n      ) {\n        newExpandedState[section] = !prevExpanded[section];\n      } else if (prevExpanded[section]) { // Allow closing a section even if prerequisites for next aren't met\n        newExpandedState[section] = false;\n      } else {\n        return prevExpanded; // If trying to open a section whose prerequisites are not met, do nothing\n      }\n      return newExpandedState;\n    });\n  }, [sectionCompleted]);\n\n  const handleShippingAddressChange = useCallback((fieldOrFullAddress, value, isFullObject = false) => {\n    setShippingAddress((prev) => {\n      let updated;\n      if (isFullObject && typeof fieldOrFullAddress === 'object' && fieldOrFullAddress !== null) {\n        updated = { ...prev, ...fieldOrFullAddress };\n      } else {\n         updated = { ...prev, [fieldOrFullAddress]: value };\n         if (fieldOrFullAddress === \"region_id\" && value && !isNaN(value)) {\n            updated[fieldOrFullAddress] = parseInt(value, 10);\n         } else if (fieldOrFullAddress === \"region_id\" && (value === \"\" || value === null)) {\n            updated.region_id = \"\"; // Explicitly clear if emptied\n            updated.region = \"\"; // Also clear text region if ID is cleared\n         }\n      }\n      if (updated.same_as_billing) {\n        const newBillingAddress = { ...updated };\n        delete newBillingAddress.same_as_billing;\n        delete newBillingAddress.save_in_address_book; // Not relevant for billing copy\n        setBillingAddress(newBillingAddress);\n      }\n      return updated;\n    });\n  }, []); // setBillingAddress is stable\n\n  const handleBillingAddressChange = useCallback((fieldOrFullAddress, value, isFullObject = false) => {\n    setBillingAddress((prev) => {\n      if (isFullObject && typeof fieldOrFullAddress === 'object' && fieldOrFullAddress !== null) {\n        return { ...prev, ...fieldOrFullAddress };\n      }\n      const updated = { ...prev, [fieldOrFullAddress]: value };\n      if (fieldOrFullAddress === \"region_id\" && value && !isNaN(value)) {\n        updated[fieldOrFullAddress] = parseInt(value, 10);\n      } else if (fieldOrFullAddress === \"region_id\" && (value === \"\" || value === null)) {\n        updated.region_id = \"\";\n        updated.region = \"\";\n      }\n      return updated;\n    });\n  }, []);\n\n  const toggleSameAsBilling = useCallback(() => {\n    setShippingAddress((prevShipping) => {\n      const newSameAsBilling = !prevShipping.same_as_billing;\n      const updatedShipping = { ...prevShipping, same_as_billing: newSameAsBilling };\n      if (newSameAsBilling) {\n        const newBilling = { ...updatedShipping };\n        delete newBilling.same_as_billing;\n        delete newBilling.save_in_address_book;\n        setBillingAddress(newBilling);\n      }\n      return updatedShipping;\n    });\n  }, []); // setBillingAddress is stable\n\n  const saveShippingAddress = useCallback(async () => {\n    setSectionLoading((prev) => ({ ...prev, address: true }));\n    setError(null);\n    try {\n      const requiredFields = [\"firstname\", \"lastname\", \"street\", \"city\", \"country_id\", \"postcode\", \"telephone\", \"email\"];\n      const missingFields = requiredFields.filter((field) =>\n        field === \"street\" ? !shippingAddress.street[0] : !shippingAddress[field]\n      );\n      if (missingFields.length > 0) throw new Error(`Please fill in all required fields: ${missingFields.join(\", \")}`);\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(shippingAddress.email)) throw new Error(\"Please enter a valid email address.\");\n\n      const estimateAddress = {\n        country_id: shippingAddress.country_id,\n        postcode: shippingAddress.postcode,\n        region: shippingAddress.region,\n        ...(shippingAddress.region_id && !isNaN(shippingAddress.region_id) && shippingAddress.region_id !== \"\" && { region_id: parseInt(shippingAddress.region_id, 10) }),\n      };\n\n      const methods = await checkoutApi.estimateShippingMethods(estimateAddress, guestCartId);\n      setShippingMethods(methods || []); // Ensure it's an array\n      if (methods && methods.length > 0) {\n        setSelectedShippingMethod(methods[0]);\n      } else {\n        setSelectedShippingMethod(null); // No methods available\n        throw new Error(\"No shipping methods available for the provided address.\");\n      }\n\n      setSectionCompleted((prev) => ({ ...prev, address: true }));\n      setSectionExpanded((prev) => ({ ...prev, address: false, shipping: true, payment: false, review: false }));\n    } catch (err) {\n      console.error(\"Error saving shipping address:\", err);\n      setError(err.message || \"Failed to save shipping information. Please try again.\");\n    } finally {\n      setSectionLoading((prev) => ({ ...prev, address: false }));\n    }\n  }, [shippingAddress, guestCartId]);\n\n  const saveShippingMethod = useCallback(async () => {\n    setSectionLoading((prev) => ({ ...prev, shipping: true }));\n    setError(null);\n    try {\n      if (!selectedShippingMethod) throw new Error(\"Please select a shipping method.\");\n\n      await checkoutApi.setShippingInformation(\n        shippingAddress.same_as_billing ? shippingAddress : { ...shippingAddress, billing_address: billingAddress },\n        selectedShippingMethod,\n        guestCartId\n      );\n\n      const paymentMethodsData = await checkoutApi.getPaymentMethods(guestCartId);\n      setPaymentMethods(paymentMethodsData || []); // Ensure it's an array\n      if (paymentMethodsData && paymentMethodsData.length > 0) {\n        setSelectedPaymentMethod(paymentMethodsData[0]);\n      } else {\n        setSelectedPaymentMethod(null);\n        // Potentially throw error or handle no payment methods\n      }\n\n      const totals = await checkoutApi.getCartTotals(guestCartId);\n      setOrderSummary(totals);\n\n      setSectionCompleted((prev) => ({ ...prev, shipping: true }));\n      setSectionExpanded((prev) => ({ ...prev, address: false, shipping: false, payment: true, review: false }));\n    } catch (err) {\n      console.error(\"Error saving shipping method:\", err);\n      setError(err.message || \"Failed to save shipping method. Please try again.\");\n    } finally {\n      setSectionLoading((prev) => ({ ...prev, shipping: false }));\n    }\n  }, [shippingAddress, billingAddress, selectedShippingMethod, guestCartId]);\n\n  const savePaymentMethod = useCallback(async () => {\n    setSectionLoading((prev) => ({ ...prev, payment: true }));\n    setError(null);\n    try {\n      if (!selectedPaymentMethod) throw new Error(\"Please select a payment method.\");\n      setSectionCompleted((prev) => ({ ...prev, payment: true }));\n      setSectionExpanded((prev) => ({ ...prev, address: false, shipping: false, payment: false, review: true }));\n    } catch (err) {\n      console.error(\"Error saving payment method:\", err);\n      setError(err.message || \"Failed to save payment method. Please try again.\");\n    } finally {\n      setSectionLoading((prev) => ({ ...prev, payment: false }));\n    }\n  }, [selectedPaymentMethod]);\n\n  const placeOrder = useCallback(async () => {\n    setSectionLoading((prev) => ({ ...prev, review: true }));\n    setError(null);\n    try {\n      if (!selectedPaymentMethod) throw new Error(\"Payment method not selected.\");\n      const paymentInfo = { method: selectedPaymentMethod.code, email: shippingAddress.email };\n      const orderResult = await checkoutApi.placeOrder(paymentInfo, guestCartId);\n      setOrderId(orderResult); // This is typically an order ID string\n      await clearCart();\n      setSectionCompleted((prev) => ({ ...prev, review: true, address: true, shipping: true, payment: true })); // Mark all as complete\n      setSectionExpanded({ address: false, shipping: false, payment: false, review: false }); // Collapse all\n      // Navigate to a success page or show confirmation inline handled by orderId state change\n    } catch (err) {\n      console.error(\"Error placing order:\", err);\n      setError(err.message || \"Failed to place order. Please try again.\");\n    } finally {\n      setSectionLoading((prev) => ({ ...prev, review: false }));\n    }\n  }, [selectedPaymentMethod, shippingAddress.email, guestCartId, clearCart]);\n\n\n  if (loading && !orderId) { // Show main loader only during init and if no order placed yet\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex justify-center items-center h-64\">\n          <LoadingSpinner size=\"lg\" />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-2xl font-bold mb-6\">Checkout</h1>\n\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6\" role=\"alert\">\n          <p>{error}</p>\n        </div>\n      )}\n\n      <div className=\"flex flex-col lg:flex-row gap-8\">\n        <div className=\"lg:w-2/3\">\n          {orderId ? (\n            <ConfirmationSection orderId={orderId} />\n          ) : (\n            <>\n              <AddressSection\n                shippingAddress={shippingAddress}\n                billingAddress={billingAddress}\n                handleShippingAddressChange={handleShippingAddressChange}\n                handleBillingAddressChange={handleBillingAddressChange}\n                toggleSameAsBilling={toggleSameAsBilling}\n                countries={countries}\n                sectionCompleted={sectionCompleted}\n                sectionExpanded={sectionExpanded}\n                toggleSection={toggleSection}\n                saveShippingAddress={saveShippingAddress}\n                sectionLoading={sectionLoading.address} // Pass specific loading state\n              />\n\n              <ShippingSection\n                shippingMethods={shippingMethods}\n                selectedShippingMethod={selectedShippingMethod}\n                setSelectedShippingMethod={setSelectedShippingMethod} // Pass setter directly\n                sectionCompleted={sectionCompleted}\n                sectionExpanded={sectionExpanded}\n                toggleSection={toggleSection}\n                saveShippingMethod={saveShippingMethod}\n                sectionLoading={sectionLoading.shipping}\n              />\n\n              <PaymentSection\n                paymentMethods={paymentMethods}\n                selectedPaymentMethod={selectedPaymentMethod}\n                setSelectedPaymentMethod={setSelectedPaymentMethod} // Pass setter directly\n                sectionCompleted={sectionCompleted}\n                sectionExpanded={sectionExpanded}\n                toggleSection={toggleSection}\n                savePaymentMethod={savePaymentMethod}\n                sectionLoading={sectionLoading.payment}\n              />\n\n              <ReviewSection\n                shippingAddress={shippingAddress}\n                billingAddress={billingAddress}\n                selectedShippingMethod={selectedShippingMethod}\n                selectedPaymentMethod={selectedPaymentMethod}\n                cartItems={cartItems}\n                orderSummary={orderSummary}\n                sectionCompleted={sectionCompleted}\n                sectionExpanded={sectionExpanded}\n                toggleSection={toggleSection}\n                placeOrder={placeOrder}\n                sectionLoading={sectionLoading.review}\n                onCouponApplied={async () => {\n                  const totals = await checkoutApi.getCartTotals(guestCartId);\n                  setOrderSummary(totals);\n                }}\n                onCouponRemoved={async () => {\n                  const totals = await checkoutApi.getCartTotals(guestCartId);\n                  setOrderSummary(totals);\n                }}\n              />\n            </>\n          )}\n        </div>\n\n        {!orderId && cartItems.length > 0 && ( // Show summary if no order placed and cart has items\n          <div className=\"lg:w-1/3\">\n            <OrderSummary\n              cartItems={cartItems}\n              orderSummary={orderSummary}\n              selectedShippingMethod={selectedShippingMethod}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OnePageCheckout;\n","import React from 'react';\nimport OnePageCheckout from '../components/onePageCheckout/OnePageCheckout';\n\nconst Checkout = () => {\n  return (\n    <div className=\"bg-gray-50 min-h-screen\">\n      <OnePageCheckout />\n    </div>\n  );\n};\nexport default Checkout;\n"],"names":["validateGuestCart","cartId","Error","placeGuestOrder","async","paymentInfo","method","email","payload","paymentMethod","additional_data","magentoApi","put","headers","Accept","data","error","errorMessage","response","status","_b","message","checkoutApi","isLoggedIn","authService","isAuthenticated","endpoint","get","addressInfo","shippingMethod","shippingAddress","firstname","lastname","street","city","region","postcode","country_id","telephone","region_id","parseInt","shippingInfo","addressInformation","shipping_address","billing_address","same_as_billing","shipping_method_code","method_code","shipping_carrier_code","carrier_code","post","_c","err","address","cleanAddress","AddressSection","memo","billingAddress","handleShippingAddressChange","handleBillingAddressChange","toggleSameAsBilling","countries","sectionCompleted","sectionExpanded","toggleSection","saveShippingAddress","sectionLoading","regionsShipping","setRegionsShipping","useState","regionsBilling","setRegionsBilling","currentUser","useAuth","addresses","fetchAddresses","useAddress","selectedSavedAddressId","setSelectedSavedAddressId","showNewAddressForm","setShowNewAddressForm","useEffect","length","defaultShipping","find","addr","default_shipping","id","toString","formatAddressForForm","handleCountryChange","useCallback","Array","isArray","_a","countryId","type","regions","fetchRegionsByCountry","handleSavedAddressSelection","addressId","emptyAddress","selectedAddress","formattedAddress","jsxs","className","children","jsxRuntimeExports","onClick","jsx","xmlns","viewBox","fill","fillRule","d","clipRule","htmlFor","value","onChange","e","target","map","join","Fragment","name","required","placeholder","country","full_name_english","selectedRegionId","selectedRegion","r","Number","readOnly","checked","save_in_address_book","disabled","ShippingSection","shippingMethods","selectedShippingMethod","setSelectedShippingMethod","saveShippingMethod","shipping","LoadingSpinner","carrier_title","method_title","amount","formatPrice","price_incl_tax","PaymentSection","paymentMethods","selectedPaymentMethod","setSelectedPaymentMethod","savePaymentMethod","payment","code","title","ReviewSection","cartItems","orderSummary","placeOrder","onCouponApplied","onCouponRemoved","couponCode","setCouponCode","applyingCoupon","setApplyingCoupon","couponError","setCouponError","couponSuccess","setCouponSuccess","formatAddressDisplay","filter","Boolean","replace","trim","handleApplyCoupon","result","applyCoupon","success","setTimeout","handleRemoveCoupon","removeCoupon","review","item","extension_attributes","image_url","src","alt","loading","sku","qty","price","item_id","subtotal_with_discount","subtotal","discount_amount","coupon_code","Math","abs","shipping_amount","tax_amount","grand_total","toUpperCase","href","rel","ConfirmationSection","orderId","stroke","strokeLinecap","strokeLinejoin","strokeWidth","Link","to","OrderSummary","itemsToDisplay","OnePageCheckout","navigate","useNavigate","cart","getCartItemCount","clearCart","useCart","setLoading","setError","setSectionExpanded","setSectionCompleted","setSectionLoading","setShippingAddress","setBillingAddress","setShippingMethods","setPaymentMethods","setCountries","setOrderSummary","setOrderId","isGuest","guestCartId","localStorage","getItem","countriesData","userInfo","getUserInfo","userAddress","baseAddress","totals","initCheckout","section","prevExpanded","newExpandedState","fieldOrFullAddress","isFullObject","prev","updated","isNaN","newBillingAddress","prevShipping","newSameAsBilling","updatedShipping","newBilling","missingFields","field","test","estimateAddress","methods","paymentMethodsData","orderResult","size","role","Checkout"],"mappings":"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"}