{"version":3,"file":"seo-D9cx9PBx.js","sources":["../../../src/hooks/useConfig.js","../../../src/components/Seo/seo.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * Hook to provide configuration settings for the application\n * Particularly useful for base URLs and other environment-specific settings\n */\nexport function useConfig() {\n  // You can load these from environment variables or a config file\n  const [config, setConfig] = useState({\n    // Base URL for media files in Magento\n    baseMediaUrl: import.meta.env.VITE_BASE_URL ,\n\n    // Base URL for the API\n    baseApiUrl: import.meta.env.VITE_MAGENTO_API_URL,\n\n    // Other configuration settings\n    currency: {\n      code: 'USD',\n      symbol: '$'\n    }\n  });\n\n  useEffect(() => {\n    // You could fetch configuration from an API or local storage here\n    // This is useful if you need to dynamically update configuration\n\n    // Example:\n    // async function loadConfig() {\n    //   try {\n    //     const response = await fetch('/api/config');\n    //     const data = await response.json();\n    //     setConfig(prevConfig => ({\n    //       ...prevConfig,\n    //       ...data\n    //     }));\n    //   } catch (error) {\n    //     console.error('Failed to load configuration:', error);\n    //   }\n    // }\n    // \n    // loadConfig();\n  }, []);\n\n  return config;\n}\n\nexport default useConfig;","import { useEffect, useLayoutEffect } from \"react\";\n\nconst Seo = ({\n  title = \"\",\n  description = \"\",\n  keywords = \"\",\n  ogTitle = \"\",\n  ogDescription = \"\",\n  ogImage = \"\",\n  ogUrl = \"\",\n  twitterCard = \"summary_large_image\",\n  twitterSite = \"\",\n  twitterCreator = \"\",\n  canonicalUrl = \"\",\n}) => {\n    \n  useEffect(() => {\n    // Set document title\n    document.title = title || \"Letscms React Magento Theme\";\n\n    // Helper function to update or create meta tags\n    const updateMetaTag = (name, content, attribute = \"name\") => {\n      let element = document.querySelector(`meta[${attribute}=\"${name}\"]`);\n\n      if (!element) {\n        element = document.createElement(\"meta\");\n        element.setAttribute(attribute, name);\n        document.head.appendChild(element);\n      }\n\n      if (content) {\n        element.setAttribute(\"content\", content);\n      } else {\n        element.remove();\n      }\n    };\n\n    // Basic meta tags\n    updateMetaTag(\"description\", description);\n    updateMetaTag(\"keywords\", keywords);\n\n    // OpenGraph meta tags\n    updateMetaTag(\"og:title\", ogTitle || title, \"property\");\n    updateMetaTag(\"og:description\", ogDescription || description, \"property\");\n    updateMetaTag(\"og:image\", ogImage, \"property\");\n    updateMetaTag(\"og:url\", ogUrl || window.location.href, \"property\");\n    updateMetaTag(\"og:type\", \"website\", \"property\");\n    updateMetaTag(\"og:locale\", \"en_US\", \"property\");\n\n    // Twitter card meta tags\n    updateMetaTag(\"twitter:card\", twitterCard, \"name\");\n    updateMetaTag(\"twitter:site\", twitterSite, \"name\");\n    updateMetaTag(\"twitter:creator\", twitterCreator, \"name\");\n    updateMetaTag(\"twitter:title\", ogTitle || title, \"name\");\n    updateMetaTag(\"twitter:description\", ogDescription || description, \"name\");\n    updateMetaTag(\"twitter:image\", ogImage, \"name\");\n\n    // Canonical link\n    let link = document.querySelector(\"link[rel='canonical']\");\n    if (canonicalUrl) {\n      if (!link) {\n        link = document.createElement(\"link\");\n        link.rel = \"canonical\";\n        document.head.appendChild(link);\n      }\n      link.href = canonicalUrl;\n    } else if (link) {\n      link.remove();\n    }\n\n    // Cleanup function\n    return () => {\n      document.title = \"Letscms React Magento Theme\";\n      // Optionally reset other meta tags to defaults if needed\n    };\n  }, [\n    title,\n    description,\n    keywords,\n    ogTitle,\n    ogDescription,\n    ogImage,\n    ogUrl,\n    twitterCard,\n    twitterSite,\n    twitterCreator,\n    canonicalUrl,\n  ]);\n\n  return null;\n};\n\nexport default Seo;\n"],"names":["useConfig","config","setConfig","useState","baseMediaUrl","baseApiUrl","currency","code","symbol","useEffect","Seo","title","description","keywords","ogTitle","ogDescription","ogImage","ogUrl","twitterCard","twitterSite","twitterCreator","canonicalUrl","document","updateMetaTag","name","content","attribute","element","querySelector","createElement","setAttribute","head","appendChild","remove","window","location","href","link","rel"],"mappings":"yCAMO,SAASA,IAEd,MAAOC,EAAQC,GAAaC,WAAS,CAEnCC,aAAc,iCAGdC,WAAY,yCAGZC,SAAU,CACRC,KAAM,MACNC,OAAQ,OAyBL,OArBPC,EAAAA,WAAU,QAmBP,IAEIR,CACT,CC1CA,MAAMS,EAAM,EACVC,QAAQ,GACRC,cAAc,GACdC,WAAW,GACXC,UAAU,GACVC,gBAAgB,GAChBC,UAAU,GACVC,QAAQ,GACRC,cAAc,sBACdC,cAAc,GACdC,iBAAiB,GACjBC,eAAe,OAGfZ,EAAAA,WAAU,KAERa,SAASX,MAAQA,GAAS,8BAG1B,MAAMY,EAAgB,CAACC,EAAMC,EAASC,EAAY,UAChD,IAAIC,EAAUL,SAASM,cAAc,QAAQF,MAAcF,OAEtDG,IACOA,EAAAL,SAASO,cAAc,QACzBF,EAAAG,aAAaJ,EAAWF,GACvBF,SAAAS,KAAKC,YAAYL,IAGxBF,EACME,EAAAG,aAAa,UAAWL,GAEhCE,EAAQM,UAKZV,EAAc,cAAeX,GAC7BW,EAAc,WAAYV,GAGZU,EAAA,WAAYT,GAAWH,EAAO,YAC9BY,EAAA,iBAAkBR,GAAiBH,EAAa,YAChDW,EAAA,WAAYP,EAAS,YACnCO,EAAc,SAAUN,GAASiB,OAAOC,SAASC,KAAM,YACzCb,EAAA,UAAW,UAAW,YACtBA,EAAA,YAAa,QAAS,YAGtBA,EAAA,eAAgBL,EAAa,QAC7BK,EAAA,eAAgBJ,EAAa,QAC7BI,EAAA,kBAAmBH,EAAgB,QACnCG,EAAA,gBAAiBT,GAAWH,EAAO,QACnCY,EAAA,sBAAuBR,GAAiBH,EAAa,QACrDW,EAAA,gBAAiBP,EAAS,QAGpC,IAAAqB,EAAOf,SAASM,cAAc,yBAalC,OAZIP,GACGgB,IACIA,EAAAf,SAASO,cAAc,QAC9BQ,EAAKC,IAAM,YACFhB,SAAAS,KAAKC,YAAYK,IAE5BA,EAAKD,KAAOf,GACHgB,GACTA,EAAKJ,SAIA,KACLX,SAASX,MAAQ,iCAGlB,CACDA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAGK"}