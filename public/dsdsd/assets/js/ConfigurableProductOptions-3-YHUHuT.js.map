{"version":3,"file":"ConfigurableProductOptions-3-YHUHuT.js","sources":["../../../src/components/product/ConfigurableProductOptions.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, memo, useMemo } from \"react\";\nimport { formatPrice } from \"../../utils/formatters\";\n\nconst ConfigurableProductOptions = ({\n  product,\n  onVariantChange,\n  selectedOptions: initialSelectedOptions,\n}) => {\n  const { configurable_options, variants } = product;\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [currentVariant, setCurrentVariant] = useState(null);\n\n  const isInitializedRef = useRef(false);\n  const prevVariantRef = useRef(null);\n\n  // Init only once unless product changes\n  useEffect(() => {\n    if (!configurable_options || isInitializedRef.current) return;\n\n    const initialSelections = {};\n    configurable_options.forEach((option) => {\n      const attrCode = option.attribute_code;\n\n      if (initialSelectedOptions?.[attrCode]) {\n        initialSelections[attrCode] = initialSelectedOptions[attrCode];\n      } else {\n        const availableValue = option.values.find((value) =>\n          variants?.some((variant) =>\n            variant.attributes?.some(\n              (attr) =>\n                attr.code === attrCode && attr.value_index === value.value_index\n            )\n          )\n        );\n        initialSelections[attrCode] =\n          availableValue?.value_index ?? option.values[0]?.value_index;\n      }\n    });\n\n    setSelectedOptions(initialSelections);\n    isInitializedRef.current = true;\n  }, [product]);\n\n  // Handle option change\n  const handleOptionChange = (attrCode, valueIndex) => {\n    setSelectedOptions((prev) => ({\n      ...prev,\n      [attrCode]: valueIndex,\n    }));\n  };\n\n  // Update variant based on selected options\n  useEffect(() => {\n    if (!variants || Object.keys(selectedOptions).length === 0) {\n      if (prevVariantRef.current !== null) {\n        setCurrentVariant(null);\n        onVariantChange?.(null, selectedOptions);\n        prevVariantRef.current = null;\n      }\n      return;\n    }\n\n    const allSelected = configurable_options?.every(\n      (option) => selectedOptions[option.attribute_code] !== undefined\n    );\n\n    if (!allSelected) {\n      if (prevVariantRef.current !== null) {\n        setCurrentVariant(null);\n        onVariantChange?.(null, selectedOptions);\n        prevVariantRef.current = null;\n      }\n      return;\n    }\n\n    const matched = variants.find((variant) =>\n      variant.attributes?.every(\n        (attr) => selectedOptions[attr.code] === attr.value_index\n      )\n    );\n\n    if (matched !== prevVariantRef.current) {\n      setCurrentVariant(matched || null);\n      onVariantChange?.(matched || null, selectedOptions);\n      prevVariantRef.current = matched || null;\n    }\n  }, [selectedOptions, variants, configurable_options]);\n\n  // No options? Return null early\n  if (!configurable_options?.length) return null;\n\n  return (\n    <div className=\"mt-4 mb-6 space-y-4\">\n      {configurable_options.map((option) => (\n        <div key={option.attribute_code}>\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n            {option.attribute_code || option.label}\n          </label>\n          <div className=\"flex flex-wrap gap-2\">\n            {option.values.map((value) => {\n              const isSelected =\n                selectedOptions[option.attribute_code] === value.value_index;\n              const swatchValue = value.swatch_data?.value;\n              const isColorSwatch = /^#([0-9A-F]{3}){1,2}$/i.test(\n                swatchValue || \"\"\n              );\n\n              const isOptionAvailable = useMemo(() => {\n                return variants?.some((variant) => {\n                  const hasThisValue = variant.attributes?.some(\n                    (attr) =>\n                      attr.code === option.attribute_code &&  \n                      attr.value_index === value.value_index\n                  );\n                  if (!hasThisValue) return false;\n\n                  return Object.entries(selectedOptions).every(\n                    ([code, valIdx]) =>\n                      code === option.attribute_code ||\n                      variant.attributes?.some(\n                        (attr) =>\n                          attr.code === code && attr.value_index === valIdx\n                      )\n                  );\n                });\n              }, [selectedOptions, variants]);\n\n              const commonProps = {\n                type: \"button\",\n                onClick: () =>\n                  handleOptionChange(option.attribute_code, value.value_index),\n                disabled: !isOptionAvailable,\n                title: value.label,\n              };\n\n              return isColorSwatch ? (\n                <button\n                  key={value.value_index}\n                  {...commonProps}\n                  className={`w-8 h-8 rounded-full border-2\n        ${\n          isSelected\n            ? \"ring-2 ring-offset-1 ring-indigo-500 border-indigo-500\"\n            : \"border-gray-300\"\n        }\n        ${\n          !isOptionAvailable\n            ? \"opacity-50 cursor-not-allowed\"\n            : \"hover:border-gray-400\"\n        }`}\n                  style={{ backgroundColor: swatchValue }}\n                  aria-label={value.label}\n                />\n              ) : (\n                <button\n                  key={value.value_index}\n                  {...commonProps}\n                  className={`px-3 py-1 border rounded text-sm\n        ${\n          isSelected\n            ? \"bg-indigo-600 text-white border-indigo-600\"\n            : \"bg-white text-gray-700 border-gray-300\"\n        }\n        ${\n          !isOptionAvailable\n            ? \"opacity-50 cursor-not-allowed line-through\"\n            : \"hover:border-gray-500\"\n        }`}\n                >\n                  {value.label}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n      ))}\n\n      {currentVariant?.product && (\n        <div className=\"mt-4 p-3 bg-gray-50 rounded border border-gray-200\">\n          <p className=\"text-sm font-medium text-gray-800\">\n            Selected: {currentVariant.product.name}\n          </p>\n          <p className=\"text-sm text-gray-600\">\n            SKU: {currentVariant.product.sku}\n          </p>\n          {currentVariant.product.price_range?.minimum_price?.final_price && (\n            <p className=\"text-sm text-indigo-600 font-semibold\">\n              Price:{\" \"}\n              {formatPrice(\n                currentVariant.product.price_range.minimum_price.final_price\n                  .value,\n                currentVariant.product.price_range.minimum_price.final_price\n                  .currency\n              )}\n            </p>\n          )}\n          <p\n            className={`text-sm ${\n              currentVariant.product.stock_status === \"IN_STOCK\"\n                ? \"text-green-600\"\n                : \"text-red-600\"\n            }`}\n          >\n            {currentVariant.product.stock_status === \"IN_STOCK\"\n              ? \"In Stock\"\n              : \"Out of Stock\"}\n          </p>\n        </div>\n      )}\n\n      {!currentVariant &&\n        Object.keys(selectedOptions).length > 0 &&\n        configurable_options.length === Object.keys(selectedOptions).length && (\n          <div className=\"mt-4 p-3 bg-red-50 rounded border border-red-200\">\n            <p className=\"text-sm text-red-700\">\n              The selected combination is not available.\n            </p>\n          </div>\n        )}\n    </div>\n  );\n};\n\nexport default memo(ConfigurableProductOptions);\n"],"names":["memo","product","onVariantChange","selectedOptions","initialSelectedOptions","configurable_options","variants","setSelectedOptions","useState","currentVariant","setCurrentVariant","isInitializedRef","useRef","prevVariantRef","useEffect","current","initialSelections","forEach","option","attrCode","attribute_code","availableValue","values","find","value","some","variant","_a","attributes","attr","code","value_index","Object","keys","length","every","matched","jsxs","className","children","map","jsx","label","isSelected","swatchValue","swatch_data","isColorSwatch","test","isOptionAvailable","useMemo","entries","valIdx","commonProps","type","onClick","handleOptionChange","valueIndex","prev","disabled","title","jsxRuntimeExports","style","backgroundColor","name","sku","_b","price_range","minimum_price","final_price","formatPrice","currency","stock_status"],"mappings":"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"}